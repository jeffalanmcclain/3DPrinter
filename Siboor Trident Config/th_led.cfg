# Put relative ToolHead LED effect macros here and intercept the STATUS call back in _STATUS_LED_TH

# Static effects
[led_effect th_nozzle_white]
leds:
    neopixel:th_led (2,3)
autostart:			false
frame_rate:			10
layers:
    static			0 0			top		(1,1,1)

[led_effect th_logo_white]
leds:
    neopixel:th_led (1)
autostart:			false
frame_rate:			10
layers:
    static			0 0			top		(1,1,1)

[led_effect th_white]
leds:
	neopixel:th_led
autostart:			false
frame_rate:			10
layers:
	static 			0 0			top		(1,1,1)


# Dynamic effects
[led_effect th_logo_rainbow]
leds:
	neopixel:th_led (1)
autostart:			false
frame_rate:			10
layers:
	gradient		0.3 1.0		add		(0.3, 0.0, 0.0), (0.0, 0.3, 0.0), (0.0, 0.0, 0.3)

[led_effect th_rainbow]
leds:
	neopixel:th_led
autostart:			false
frame_rate:			10
layers:
	gradient		0.3 1.0		add		(0.3, 0.0, 0.0), (0.0, 0.3, 0.0), (0.0, 0.0, 0.3)

[led_effect th_idle]
leds:
	neopixel:th_led
autostart:			false
frame_rate:			10
layers:
	strobe			4 0.5		add		(0,0,0),(0,0,0),(0,0,0),(0,0,0), (0,0,0),(0,0,0),(0,0,0),(0,0,0), (0,0,0),(0,0,0),(0,0,0),(0,0,0), (0,0,0),(0,0,0),(0,0,0),(0,0,0), (0,0,0),(0,0,0),(0,0,0),(1,0,0), (0,0,0),(0,0,0),(0,0,0),(0,0,0) 
	strobe			1 0.1		add		(0,0,0),(0,0,0),(0,0,0),(0,0,0),(0,0,0),(1,0,0) 
	breathing		12.00 0		top		(0.0,0.0,0.7)

[led_effect th_kitt]
leds:
	neopixel:th_led
autostart:			false
frame_rate:			10
layers:
	strobe 			4 0.50 add (0,0,0),(0,0,0),(0,0,0),(1,0,0), (0,0,0),(0,0,0),(0,0,0),(0,0,0)
	strobe 			1 0.05 top (0,0,0),(1,0,0) 


######################################################################################
######  Macros
######################################################################################

[gcode_macro _LED_STATUS_OFF_TH]
gcode:
	STOP_LED_EFFECTS LEDS="neopixel:th_led" FADETIME=1

# This is the provided STATUS swither routine
[gcode_macro _STATUS_TH_LED]
gcode:
	{% set status = printer['gcode_macro _STATUS_VARIABLES'].printer_status %}
	# don't need all these case checks, as we just print out status in all cases, but if you wanted to do custom LED lighting in your own or did want to do something special, this is template
	# { action_respond_info("Printer status in LED.CFG is: " ~ status) }
	{% if status == "READY" %}
		_LED_STATUS_READY_TH
	{% elif status == "PRINTING" %}
		_LED_STATUS_PRINTING_TH
	# {% elif status == "BUSY" %}
		# LED_STATUS_BUSY_TH
	# {% elif status == "BUSY_END" %}
		# LED_STATUS_BUSY_END_TH
	# {% elif status == "WARMING_HOTEND" %}
		# LED_STATUS_WARMING_HOTEND_TH
	# {% elif status == "WARMING_HOTEND_END" %}
		# LED_STATUS_WARMING_HOTEND_END_TH
	# {% elif status == "HEATING_HOTEND" %}
		# LED_STATUS_HEATING_HOTEND_TH
	# {% elif status == "HEATING_HOTEND_END" %}
		# LED_STATUS_HEATING_HOTEND_END_TH
	# {% elif status == "HEATING_BED" %}
		# LED_STATUS_HEATING_BED_TH
	# {% elif status == "HEATING_BED_END" %}
		# LED_STATUS_HEATING_BED_END_TH
	# {% elif status == "HOMING" %}
		# LED_STATUS_HOMING_TH
	# {% elif status == "HOMING_END" %}
		# LED_STATUS_HOMING_END_TH
	# {% elif status == "CALIBRATING_Z" %}
		# LED_STATUS_CALIBRATING_Z_TH
	# {% elif status == "CALIBRATING_Z_END" %}
		# LED_STATUS_CALIBRATING_Z_END_TH
	# {% elif status == "MESHING" %}
		# LED_STATUS_MESHING_TH
	# {% elif status == "MESHING_END" %}
		# LED_STATUS_MESHING_END_TH
	# {% elif status == "LEVELING" %}
		# LED_STATUS_LEVELING_TH
	# {% elif status == "LEVELING_END" %}
		# LED_STATUS_LEVELING_END_TH
	# {% elif status == "HEAT_SOAKING" %}
		# LED_STATUS_HEAT_SOAKING_TH
	# {% elif status == "HEAT_SOAKING_END" %}
		# LED_STATUS_HEAT_SOAKING_END_TH
	# {% elif status == "CLEANING" %}
		# LED_STATUS_CLEANING_TH
	# {% elif status == "CLEANING_END" %}
		# LED_STATUS_CLEANING_END_TH
	# {% elif status == "COOLING" %}
		# LED_STATUS_COOLING_TH
	# {% elif status == "COOLING_END" %}
		# LED_STATUS_COOLING_END_TH
	# {% elif status == "CRITICAL_ERROR" %}
		# LED_STATUS_CRITICAL_ERROR_TH
	# {% elif status == "CRITICAL_ERROR_END" %}
		# LED_STATUS_CRITICAL_ERROR_END_TH
	# {% elif status == "PART_READY" %}
		# LED_STATUS_PART_READY_TH
	# {% elif status == "PART_READY_END" %}
		# LED_STATUS_PART_READY_END_TH
	{% else %}
		_LED_STATUS_IDLE_TH
	{% endif %}

[gcode_macro _LED_STATUS_IDLE_TH]
gcode:
	STOP_LED_EFFECTS LEDS=neopixel:th_led
	SET_LED_EFFECT EFFECT=th_idle

[gcode_macro _LED_STATUS_READY_TH]
gcode:
	STOP_LED_EFFECTS LEDS=neopixel:th_led
	SET_LED_EFFECT EFFECT=th_rainbow

[gcode_macro _LED_STATUS_PRINTING_TH]
gcode:
	STOP_LED_EFFECTS LEDS=neopixel:th_led
	SET_LED_EFFECT EFFECT=th_logo_rainbow
	SET_LED_EFFECT EFFECT=th_nozzle_white
