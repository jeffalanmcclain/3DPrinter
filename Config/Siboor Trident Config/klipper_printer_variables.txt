printer['gcode'].commands = {'M110': {}, 'M112': {}, 'M115': {}, 'RESTART': {'help': 'Reload config file and restart host software'}, 'FIRMWARE_RESTART': {'help': 'Restart firmware, host, and reload config'}, 'ECHO': {}, 'STATUS': {'help': 'Report the printer status'}, 'HELP': {'help': 'Report the list of available extended G-Code commands'}, 'SAVE_CONFIG': {'help': 'Overwrite config file and restart'}, 'G1': {}, 'G20': {}, 'G21': {}, 'M82': {}, 'M83': {}, 'G90': {}, 'G91': {}, 'G92': {}, 'M220': {}, 'M221': {}, 'SET_GCODE_OFFSET': {'help': 'Set a virtual offset to g-code positions'}, 'SAVE_GCODE_STATE': {'help': 'Save G-Code coordinate state'}, 'RESTORE_GCODE_STATE': {'help': 'Restore a previously saved G-Code state'}, 'G0': {}, 'M114': {}, 'GET_POSITION': {'help': 'Return information on the current location of the toolhead'}, 'M20': {}, 'M21': {}, 'M23': {}, 'M26': {}, 'M27': {}, 'M28': {}, 'M29': {}, 'M30': {}, 'SDCARD_RESET_FILE': {'help': 'Clears a loaded SD File. Stops the print if necessary'}, 'SDCARD_PRINT_FILE': {'help': 'Loads a SD file and starts the print.  May include files in subdirectories.'}, 'G2': {}, 'G3': {}, 'G17': {}, 'G18': {}, 'G19': {}, 'EXCLUDE_OBJECT_START': {'help': 'Marks the beginning the current object as labeled'}, 'EXCLUDE_OBJECT_END': {'help': 'Marks the end the current object'}, 'EXCLUDE_OBJECT': {'help': 'Cancel moves inside a specified objects'}, 'EXCLUDE_OBJECT_DEFINE': {'help': 'Provides a summary of an object'}, 'M118': {}, 'RESPOND': {'help': 'Echo the message prepended with a prefix'}, 'M73': {}, 'M117': {}, 'SET_DISPLAY_TEXT': {'help': 'Set or clear the display message'}, 'STEPPER_BUZZ': {'help': 'Oscillate a given stepper to help id it'}, 'FORCE_MOVE': {'help': 'Manually move a stepper; invalidates kinematics'}, 'SET_KINEMATIC_POSITION': {'help': 'Force a low-level kinematic position'}, '_EXCITATE_AXIS_AT_FREQ': {'help': 'Maintain a specified excitation frequency for a period of time to diagnose and locate a source of vibrations'}, '_AXES_MAP_CALIBRATION': {'help': 'Perform a set of movements to measure the orientation of the accelerometer and help you set the best axes_map configuration for your printer'}, '_COMPARE_BELTS_RESPONSES': {'help': 'Perform a custom half-axis test to analyze and compare the frequency profiles of individual belts on CoreXY or CoreXZ printers'}, '_AXES_SHAPER_CALIBRATION': {'help': 'Perform standard axis input shaper tests on one or both XY axes to select the best input shaper filter'}, '_CREATE_VIBRATIONS_PROFILE': {'help': 'Run a series of motions to find speed/angle ranges where the printer could be exposed to VFAs to optimize your slicer speed profiles and TMC driver parameters'}, 'EXCITATE_AXIS_AT_FREQ': {'help': 'Maintain a specified excitation frequency for a period of time to diagnose and locate a source of vibrations'}, 'SET_GCODE_VARIABLE': {'help': 'Set the value of a G-Code macro variable'}, 'AXES_MAP_CALIBRATION': {'help': 'Perform a set of movements to measure the orientation of the accelerometer and help you set the best axes_map configuration for your printer'}, 'COMPARE_BELTS_RESPONSES': {'help': 'Perform a custom half-axis test to analyze and compare the frequency profiles of individual belts on CoreXY or CoreXZ printers'}, 'AXES_SHAPER_CALIBRATION': {'help': 'Perform standard axis input shaper tests on one or both XY axes to select the best input shaper filter'}, 'CREATE_VIBRATIONS_PROFILE': {'help': 'Run a series of motions to find speed/angle ranges where the printer could be exposed to VFAs to optimize your slicer speed profiles and TMC driver parameters'}, '_STATUS_VARIABLES': {'help': 'G-Code macro'}, 'SET_STATUS': {'help': 'Set Printer Status'}, 'RESET_STATUS': {'help': 'G-Code macro'}, '_EFFECT_STATUS': {'help': 'G-Code macro'}, '_STATUS_CONSOLE': {'help': 'G-Code macro'}, '_STATUS_KLIPPER_SCREEN': {'help': 'G-Code macro'}, 'CALIBRATE_HOTEND': {'help': 'Run PID calibration on hotend at optional temp set in menu'}, 'CALIBRATE_BEDHEATER': {'help': 'Run PID calibration on bed heater at optional temp set in menu'}, 'RUN_SHELL_COMMAND': {'help': 'Run a linux shell command'}, 'TEST_SPEED': {'help': 'Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU'}, 'DUMP_VARIABLES': {'help': "Macro to dump all printer variables excluding 'configfile'"}, 'UPDATE_DELAYED_GCODE': {'help': 'Update the duration of a delayed_gcode'}, '_START_PRINT': {'help': 'Common Start Print routine'}, 'PRINT_START': {'help': 'Common Start Print routine'}, '_END_PRINT': {'help': 'Common END Print routine'}, 'PRINT_END': {'help': 'G-Code macro'}, 'HOME_IF_NEEDED': {'help': 'G-Code macro'}, 'LOAD_FILAMENT': {'help': 'G-Code macro'}, 'UNLOAD_FILAMENT': {'help': 'G-Code macro'}, 'DRAW_PRIMING_LINES': {'help': 'Purge lines at front of bed'}, 'HEAT_SOAK': {'help': 'Heats the bed and performs a soak.'}, 'CANCEL_HEAT_SOAK': {'help': 'Cancels an in-progress HEAT_SOAK cycle'}, '_SOAK_COMPLETE': {'help': 'Finish the soak command'}, 'RAZZLE_DAZZLE': {'help': 'Move head around the space fast! Fxxx is mm/min'}, 'LED_STOP': {'help': 'G-Code macro'}, 'M18': {}, 'M84': {}, 'SET_STEPPER_ENABLE': {'help': 'Enable/disable individual stepper by name'}, 'SET_TMC_FIELD': {'help': 'Set a register field of a TMC driver'}, 'INIT_TMC': {'help': 'Initialize TMC stepper driver registers'}, 'SET_TMC_CURRENT': {'help': 'Set the current of a TMC driver'}, 'DUMP_TMC': {'help': 'Read and display TMC stepper driver registers'}, 'M105': {}, 'TEMPERATURE_WAIT': {'help': 'Wait for a temperature on a sensor'}, 'QUERY_ADC': {'help': 'Report the last value of an analog pin'}, 'PID_CALIBRATE': {'help': 'Run PID calibration test'}, 'M140': {}, 'SET_IDLE_TIMEOUT': {'help': 'Set the idle timeout in seconds'}, 'BED_MESH_PROFILE': {'help': 'Bed Mesh Persistent Storage management'}, 'BED_MESH_OUTPUT': {'help': 'Retrieve interpolated grid of probed z-points'}, 'BED_MESH_MAP': {'help': 'Serialize mesh and output to terminal'}, 'BED_MESH_CLEAR': {'help': 'Clear the Mesh so no z-adjustment is made'}, 'BED_MESH_OFFSET': {'help': 'Add X/Y offsets to the mesh lookup'}, 'PROBECALIBRATE': {'help': 'G-Code macro'}, 'G32': {'help': 'G-Code macro'}, 'SET_FAN_SPEED': {'help': 'Sets the speed of a fan'}, 'SET_LED': {'help': 'Set the color of an LED'}, 'SET_LED_TEMPLATE': {'help': 'Assign a display_template to an LED'}, 'SET_INPUT_SHAPER': {'help': 'Set cartesian parameters for input shaper'}, 'CARTOGRAPHER_MODEL_SELECT': {'help': 'Load named scanner model'}, 'CARTOGRAPHER_MODEL_SAVE': {'help': 'Save current scanner model'}, 'CARTOGRAPHER_MODEL_REMOVE': {'help': 'Remove saved scanner model'}, 'CARTOGRAPHER_MODEL_LIST': {'help': 'Remove saved scanner model'}, 'CARTO_MODEL_SELECT': {'help': 'Load named scanner model'}, 'CARTO_MODEL_SAVE': {'help': 'Save current scanner model'}, 'CARTO_MODEL_REMOVE': {'help': 'Remove saved scanner model'}, 'CARTO_MODEL_LIST': {'help': 'Remove saved scanner model'}, 'CARTOGRAPHER_STREAM': {'help': 'Enable Scanner Streaming'}, 'CARTOGRAPHER_QUERY': {'help': 'Take a sample from the sensor'}, 'CARTOGRAPHER_CALIBRATE': {'help': 'Calibrate scanner response curve'}, 'CARTOGRAPHER_THRESHOLD_SCAN': {'help': 'Scan THRESHOLD in TOUCH mode'}, 'CARTOGRAPHER_ESTIMATE_BACKLASH': {'help': 'Estimate Z axis backlash'}, 'CARTOGRAPHER_TOUCH': {'help': 'Home in TOUCH mode'}, 'CARTO_STREAM': {'help': 'Enable Scanner Streaming'}, 'CARTO_QUERY': {'help': 'Take a sample from the sensor'}, 'CARTO_CALIBRATE': {'help': 'Calibrate scanner response curve'}, 'CARTO_THRESHOLD_SCAN': {'help': 'Scan THRESHOLD in TOUCH mode'}, 'CARTO_ESTIMATE_BACKLASH': {'help': 'Estimate Z axis backlash'}, 'CARTO_TOUCH': {'help': 'Home in TOUCH mode'}, 'PROBE': {'help': 'Probe Z-height at current XY position'}, 'PROBE_ACCURACY': {'help': 'Probe Z-height accuracy at current XY position'}, 'PROBE_SWITCH': {'help': 'swith between scan and touch'}, 'Z_OFFSET_APPLY_PROBE': {'help': "Adjust the probe's z_offset"}, 'ACCELEROMETER_MEASURE': {'help': 'Start/stop accelerometer'}, 'ACCELEROMETER_QUERY': {'help': 'Query accelerometer for the current values'}, 'ACCELEROMETER_DEBUG_READ': {'help': 'Query register (for debugging)'}, 'ACCELEROMETER_DEBUG_WRITE': {'help': 'Set register (for debugging)'}, 'MEASURE_AXES_NOISE': {'help': 'Measures noise of all enabled accelerometer chips'}, 'TEST_RESONANCES': {'help': 'Runs the resonance test for a specifed axis'}, 'SHAPER_CALIBRATE': {'help': 'Simular to TEST_RESONANCES but suggest input shaper config'}, 'PROBE_CALIBRATE': {'help': 'G-Code macro'}, 'DATA_SAMPLE': {'help': 'G-Code macro'}, 'SYNC_MOTORS': {'help': 'Start motors synchronization'}, 'SYNC_MOTORS_CALIBRATE': {'help': 'Calibrate synchronization process'}, 'SYNC_MOTORS_STATS': {'help': 'Show statistics'}, 'SET_TEMPERATURE_FAN_TARGET': {'help': 'Sets a temperature fan target and fan speed limits'}, 'M106': {'help': 'Set Fan [0,2,3] to speed 0-255'}, 'STOP_LED_EFFECTS': {'help': 'Stops all led_effects'}, 'SET_LED_EFFECT': {'help': 'Starts or Stops the specified led_effect'}, '_LED_STATUS_OFF_TH': {'help': 'G-Code macro'}, '_STATUS_TH_LED': {'help': 'G-Code macro'}, '_LED_STATUS_IDLE_TH': {'help': 'G-Code macro'}, '_LED_STATUS_READY_TH': {'help': 'G-Code macro'}, '_LED_STATUS_PRINTING_TH': {'help': 'G-Code macro'}, 'LED_OFF': {'help': 'G-Code macro'}, 'LED_ON': {'help': 'G-Code macro'}, '_STATUS_CHAMBER_LED': {'help': 'G-Code macro'}, '_LED_STATUS_IDLE': {'help': 'G-Code macro'}, '_LED_STATUS_READY': {'help': 'G-Code macro'}, '_LED_STATUS_PRINTING': {'help': 'G-Code macro'}, '_LED_RAINBOW': {'help': 'G-Code macro'}, '_LED_RAINBOWGREG': {'help': 'G-Code macro'}, '_LED_EPILEPSIE': {'help': 'G-Code macro'}, '_LED_COMMET': {'help': 'G-Code macro'}, '_LED_DOUBLECOMMET': {'help': 'G-Code macro'}, 'LED_KITT': {'help': 'G-Code macro'}, '_LED_PACMAN': {'help': 'G-Code macro'}, '_LED_WHITE': {'help': 'G-Code macro'}, 'CLEAR_PAUSE': {'help': 'Clears the current paused state without resuming the print'}, 'SET_PAUSE_NEXT_LAYER': {'help': 'Enable a pause if the next layer is reached'}, 'SET_PAUSE_AT_LAYER': {'help': 'Enable/disable a pause if a given layer number is reached'}, '_TOOLHEAD_PARK_PAUSE_CANCEL': {'help': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, '_CLIENT_EXTRUDE': {'help': 'Extrudes, if the extruder is hot enough'}, '_CLIENT_RETRACT': {'help': 'Retracts, if the extruder is hot enough'}, '_CLIENT_LINEAR_MOVE': {'help': 'Linear move with save and restore of the gcode state'}, 'SET_ACTIVE_SPOOL': {'help': 'G-Code macro'}, 'CLEAR_ACTIVE_SPOOL': {'help': 'G-Code macro'}, 'GET_TIMELAPSE_SETUP': {'help': 'Print the Timelapse setup'}, '_SET_TIMELAPSE_SETUP': {'help': 'Set user parameters for timelapse'}, 'TIMELAPSE_TAKE_FRAME': {'help': 'Take Timelapse shoot'}, '_TIMELAPSE_NEW_FRAME': {'help': 'action call for timelapse shoot. must be a seperate macro'}, 'HYPERLAPSE': {'help': 'Start/Stop a hyperlapse recording'}, 'TIMELAPSE_RENDER': {'help': 'Render Timelapse video and wait for the result'}, 'TEST_STREAM_DELAY': {'help': 'Helper macro to find stream and park delay'}, 'QUERY_ENDSTOPS': {'help': 'Report on the status of each endstop'}, 'M119': {}, 'G4': {}, 'M400': {}, 'SET_VELOCITY_LIMIT': {'help': 'Set printer velocity limits'}, 'M204': {}, 'MANUAL_PROBE': {'help': 'Start manual probe helper script'}, 'TUNING_TOWER': {'help': 'Tool to adjust a parameter at each Z height'}, 'SET_PRESSURE_ADVANCE': {'help': 'Set pressure advance parameters'}, 'SET_EXTRUDER_ROTATION_DISTANCE': {'help': 'Set extruder rotation distance'}, 'SYNC_EXTRUDER_MOTION': {'help': 'Set extruder stepper motion queue'}, 'M104': {}, 'M109': {}, 'ACTIVATE_EXTRUDER': {'help': 'Change the active extruder'}, 'M24.1': {'help': "Renamed builtin of 'M24'"}, 'M24': {'help': 'Resume/Pause Print'}, 'M25.1': {'help': "Renamed builtin of 'M25'"}, 'M25': {'help': 'Pause Print'}, 'Z_TILT_ADJUST_SI': {'help': "Renamed builtin of 'Z_TILT_ADJUST'"}, 'Z_TILT_ADJUST': {'help': 'Level Bed to fixed gantry'}, 'TURN_OFF_HEATERS_SI': {'help': "Renamed builtin of 'TURN_OFF_HEATERS'"}, 'TURN_OFF_HEATERS': {'help': 'G-Code macro'}, 'SET_HEATER_TEMPERATURE_SI': {'help': "Renamed builtin of 'SET_HEATER_TEMPERATURE'"}, 'SET_HEATER_TEMPERATURE': {'help': 'G-Code macro'}, 'M190.1': {'help': "Renamed builtin of 'M190'"}, 'M190': {'help': 'G-Code macro'}, 'G28.1': {'help': "Renamed builtin of 'G28'"}, 'G28': {'help': 'G-Code macro'}, 'BED_MESH_CALIBRATE_SI': {'help': "Renamed builtin of 'BED_MESH_CALIBRATE'"}, 'BED_MESH_CALIBRATE': {'help': 'G-Code macro'}, 'PAUSE_BASE': {'help': "Renamed builtin of 'PAUSE'"}, 'PAUSE': {'help': 'Pause the actual running print'}, 'RESUME_BASE': {'help': "Renamed builtin of 'RESUME'"}, 'RESUME': {'help': 'Resume the actual running print'}, 'CANCEL_PRINT_BASE': {'help': "Renamed builtin of 'CANCEL_PRINT'"}, 'CANCEL_PRINT': {'help': 'Cancel the actual running print'}, 'SET_PRINT_STATS_INFO_BASE': {'help': "Renamed builtin of 'SET_PRINT_STATS_INFO'"}, 'SET_PRINT_STATS_INFO': {'help': 'Overwrite, to get pause_next_layer and pause_at_layer feature'}}
printer['webhooks'].state = ready
printer['webhooks'].state_message = Printer is ready
printer['configfile'].warnings = []
printer['configfile'].save_config_pending = False
printer['configfile'].save_config_pending_items = {}
printer['mcu'].mcu_version = v0.12.0-396-gb7233d119
printer['mcu'].mcu_build_versions = gcc: (15:12.2.rel1-1) 12.2.1 20221205 binutils: (2.40-2+18+b1) 2.40
printer['mcu'].mcu_constants = {'ADC_MAX': 4095, 'BUS_PINS_i2c1_PB6_PB7': 'PB6,PB7', 'BUS_PINS_i2c1_PB8_PB9': 'PB8,PB9', 'BUS_PINS_i2c2_PB10_PB11': 'PB10,PB11', 'BUS_PINS_i2c3_PA8_PC9': 'PA8,PC9', 'BUS_PINS_spi1': 'PA6,PA7,PA5', 'BUS_PINS_spi1a': 'PB4,PB5,PB3', 'BUS_PINS_spi2': 'PB14,PB15,PB13', 'BUS_PINS_spi2a': 'PC2,PC3,PB10', 'BUS_PINS_spi3a': 'PC11,PC12,PC10', 'BUS_PINS_spi4': 'PE13,PE14,PE12', 'BUS_PINS_spi5': 'PF8,PF9,PF7', 'BUS_PINS_spi5a': 'PH7,PF11,PH6', 'BUS_PINS_spi6': 'PG12,PG14,PG13', 'CANBUS_BRIDGE': 1, 'CLOCK_FREQ': 400000000, 'MCU': 'stm32h723xx', 'PWM_MAX': 255, 'RECEIVE_WINDOW': 192, 'RESERVE_PINS_CAN': 'PD0,PD1', 'RESERVE_PINS_USB': 'PA11,PA12', 'RESERVE_PINS_crystal': 'PH0,PH1', 'STATS_SUMSQ_BASE': 256, 'STEPPER_BOTH_EDGE': 1}
printer['mcu'].last_stats = {'mcu_awake': 0.001, 'mcu_task_avg': 1e-06, 'mcu_task_stddev': 1e-06, 'bytes_write': 5110, 'bytes_read': 11246, 'bytes_retransmit': 0, 'bytes_invalid': 0, 'send_seq': 339, 'receive_seq': 339, 'retransmit_seq': 0, 'srtt': 0.0, 'rttvar': 0.0, 'rto': 0.025, 'ready_bytes': 0, 'upcoming_bytes': 0, 'freq': 399994436}
printer['mcu THB'].mcu_version = v0.12.0-396-gb7233d119
printer['mcu THB'].mcu_build_versions = gcc: (15:12.2.rel1-1) 12.2.1 20221205 binutils: (2.40-2+18+b1) 2.40
printer['mcu THB'].mcu_constants = {'ADC_MAX': 4095, 'BUS_PINS_i2c1_PA9_PA10': 'PA9,PA10', 'BUS_PINS_i2c1_PB6_PB7': 'PB6,PB7', 'BUS_PINS_i2c1_PB8_PB9': 'PB8,PB9', 'BUS_PINS_i2c2_PB10_PB11': 'PB10,PB11', 'BUS_PINS_i2c2_PB13_PB14': 'PB13,PB14', 'BUS_PINS_i2c3_PB3_PB4': 'PB3,PB4', 'BUS_PINS_i2c3_PC0_PC1': 'PC0,PC1', 'BUS_PINS_spi1': 'PA6,PA7,PA5', 'BUS_PINS_spi1a': 'PB4,PB5,PB3', 'BUS_PINS_spi2': 'PB14,PB15,PB13', 'BUS_PINS_spi2_PB2_PB11_PB10': 'PB2,PB11,PB10', 'BUS_PINS_spi2a': 'PC2,PC3,PB10', 'BUS_PINS_spi3': 'PB4,PB5,PB3', 'CANBUS_FREQUENCY': 1000000, 'CLOCK_FREQ': 64000000, 'MCU': 'stm32g0b1xx', 'PWM_MAX': 255, 'RECEIVE_WINDOW': 192, 'RESERVE_PINS_CAN': 'PB0,PB1', 'RESERVE_PINS_crystal': 'PF0,PF1', 'STATS_SUMSQ_BASE': 256, 'STEPPER_BOTH_EDGE': 1}
printer['mcu THB'].last_stats = {'mcu_awake': 0.003, 'mcu_task_avg': 1.5e-05, 'mcu_task_stddev': 2.1e-05, 'bytes_write': 1563, 'bytes_read': 6638, 'bytes_retransmit': 0, 'bytes_invalid': 0, 'send_seq': 165, 'receive_seq': 165, 'retransmit_seq': 0, 'srtt': 0.001, 'rttvar': 0.0, 'rto': 0.025, 'ready_bytes': 0, 'upcoming_bytes': 0, 'freq': 63999948, 'adj': 63999529}
printer['gcode_move'].speed_factor = 1.0
printer['gcode_move'].speed = 1500.0
printer['gcode_move'].extrude_factor = 1.0
printer['gcode_move'].absolute_coordinates = True
printer['gcode_move'].absolute_extrude = True
printer['gcode_move'].homing_origin = Coord(x=0.0, y=0.0, z=0.0, e=0.0)
printer['gcode_move'].position = Coord(x=0.0, y=0.0, z=0.0, e=0.0)
printer['gcode_move'].gcode_position = Coord(x=0.0, y=0.0, z=0.0, e=0.0)
printer['print_stats'].filename = 
printer['print_stats'].total_duration = 0.0
printer['print_stats'].print_duration = 0.0
printer['print_stats'].filament_used = 0.0
printer['print_stats'].state = standby
printer['print_stats'].message = 
printer['print_stats'].info = {'total_layer': None, 'current_layer': None}
printer['virtual_sdcard'].file_path = None
printer['virtual_sdcard'].progress = 0.0
printer['virtual_sdcard'].is_active = False
printer['virtual_sdcard'].file_position = 0
printer['virtual_sdcard'].file_size = 0
printer['exclude_object'].objects = []
printer['exclude_object'].excluded_objects = []
printer['exclude_object'].current_object = None
printer['display_status'].progress = 0.0
printer['display_status'].message = Ready
printer['gcode_macro excitate_axis_at_freq'] = {}
printer['gcode_macro axes_map_calibration'] = {}
printer['gcode_macro compare_belts_responses'] = {}
printer['gcode_macro axes_shaper_calibration'] = {}
printer['gcode_macro create_vibrations_profile'] = {}
printer['gcode_macro _STATUS_VARIABLES'].printer_status = READY
printer['gcode_macro _STATUS_VARIABLES'].status_effect_macros = ['_STATUS_CONSOLE', '_STATUS_KLIPPER_SCREEN']
printer['gcode_macro SET_STATUS'] = {}
printer['gcode_macro RESET_STATUS'] = {}
printer['gcode_macro _EFFECT_STATUS'] = {}
printer['gcode_macro _STATUS_CONSOLE'] = {}
printer['gcode_macro _STATUS_KLIPPER_SCREEN'] = {}
printer['gcode_macro M24'] = {}
printer['gcode_macro M25'] = {}
printer['gcode_macro Z_TILT_ADJUST'] = {}
printer['gcode_macro TURN_OFF_HEATERS'] = {}
printer['gcode_macro SET_HEATER_TEMPERATURE'] = {}
printer['gcode_macro M190'] = {}
printer['gcode_macro G28'] = {}
printer['gcode_macro BED_MESH_CALIBRATE'] = {}
printer['gcode_macro Calibrate_Hotend'] = {}
printer['gcode_macro Calibrate_BedHeater'] = {}
printer['gcode_macro TEST_SPEED'] = {}
printer['gcode_macro DUMP_VARIABLES'] = {}
printer['gcode_macro _START_PRINT'] = {}
printer['gcode_macro PRINT_START'] = {}
printer['gcode_macro _END_PRINT'] = {}
printer['gcode_macro PRINT_END'] = {}
printer['gcode_macro HOME_IF_NEEDED'] = {}
printer['gcode_macro PAUSE'].extrude = 1.0
printer['gcode_macro RESUME'].last_extruder_temp = {'restore': False, 'temp': 0}
printer['gcode_macro RESUME'].restore_idle_timeout = 0
printer['gcode_macro RESUME'].idle_state = False
printer['gcode_macro CANCEL_PRINT'].park = True
printer['gcode_macro LOAD_FILAMENT'].load_distance = 50
printer['gcode_macro LOAD_FILAMENT'].purge_distance = 25
printer['gcode_macro UNLOAD_FILAMENT'].unload_distance = 50
printer['gcode_macro UNLOAD_FILAMENT'].purge_distance = 25
printer['gcode_macro DRAW_PRIMING_LINES'] = {}
printer['gcode_macro HEAT_SOAK'].target_chamber_temp = 0
printer['gcode_macro HEAT_SOAK'].target_bed_temp = 0
printer['gcode_macro HEAT_SOAK'].stage = None
printer['gcode_macro HEAT_SOAK'].check_interval = 10
printer['gcode_macro HEAT_SOAK'].soak_time_remaining = 0
printer['gcode_macro HEAT_SOAK'].total_time_elapsed = 0
printer['gcode_macro CANCEL_HEAT_SOAK'] = {}
printer['gcode_macro _SOAK_COMPLETE'] = {}
printer['gcode_macro Razzle_Dazzle'] = {}
printer['gcode_macro LED_STOP'] = {}
printer['stepper_enable'].steppers = {'stepper_x': False, 'stepper_x1': False, 'stepper_y': False, 'stepper_y1': False, 'stepper_z': False, 'stepper_z1': False, 'stepper_z2': False, 'extruder': False}
printer['tmc5160 stepper_x'].mcu_phase_offset = 115
printer['tmc5160 stepper_x'].phase_offset_position = 0.71875
printer['tmc5160 stepper_x'].run_current = 1.196925541070979
printer['tmc5160 stepper_x'].hold_current = 1.196925541070979
printer['tmc5160 stepper_x'].drv_status = None
printer['tmc5160 stepper_x'].temperature = None
printer['tmc5160 stepper_x1'].mcu_phase_offset = 113
printer['tmc5160 stepper_x1'].phase_offset_position = 0.70625
printer['tmc5160 stepper_x1'].run_current = 1.196925541070979
printer['tmc5160 stepper_x1'].hold_current = 1.196925541070979
printer['tmc5160 stepper_x1'].drv_status = None
printer['tmc5160 stepper_x1'].temperature = None
printer['tmc5160 stepper_y'].mcu_phase_offset = 5
printer['tmc5160 stepper_y'].phase_offset_position = 0.03125
printer['tmc5160 stepper_y'].run_current = 1.196925541070979
printer['tmc5160 stepper_y'].hold_current = 1.196925541070979
printer['tmc5160 stepper_y'].drv_status = None
printer['tmc5160 stepper_y'].temperature = None
printer['tmc5160 stepper_y1'].mcu_phase_offset = 113
printer['tmc5160 stepper_y1'].phase_offset_position = 0.70625
printer['tmc5160 stepper_y1'].run_current = 1.196925541070979
printer['tmc5160 stepper_y1'].hold_current = 1.196925541070979
printer['tmc5160 stepper_y1'].drv_status = None
printer['tmc5160 stepper_y1'].temperature = None
printer['tmc2209 stepper_z'].mcu_phase_offset = 3
printer['tmc2209 stepper_z'].phase_offset_position = 0.00375
printer['tmc2209 stepper_z'].run_current = 0.7954951288348658
printer['tmc2209 stepper_z'].hold_current = 0.7954951288348658
printer['tmc2209 stepper_z'].drv_status = None
printer['tmc2209 stepper_z'].temperature = None
printer['tmc2209 stepper_z1'].mcu_phase_offset = 23
printer['tmc2209 stepper_z1'].phase_offset_position = 0.02875
printer['tmc2209 stepper_z1'].run_current = 0.7954951288348658
printer['tmc2209 stepper_z1'].hold_current = 0.7954951288348658
printer['tmc2209 stepper_z1'].drv_status = None
printer['tmc2209 stepper_z1'].temperature = None
printer['tmc2209 stepper_z2'].mcu_phase_offset = 45
printer['tmc2209 stepper_z2'].phase_offset_position = 0.05625
printer['tmc2209 stepper_z2'].run_current = 0.7954951288348658
printer['tmc2209 stepper_z2'].hold_current = 0.7954951288348658
printer['tmc2209 stepper_z2'].drv_status = None
printer['tmc2209 stepper_z2'].temperature = None
printer['heaters'].available_heaters = ['heater_bed', 'extruder']
printer['heaters'].available_sensors = ['heater_bed', 'temperature_sensor MCU_THB', 'temperature_sensor cartographer_coil', 'temperature_sensor MCU_Carto', 'temperature_sensor MCU_Manta', 'temperature_sensor CM4', 'temperature_sensor Chamber_Top', 'temperature_sensor Chamber_Bottom', 'temperature_fan Electronics_Bay', 'extruder']
printer['heaters'].available_monitors = []
printer['heater_bed'].temperature = 30.04
printer['heater_bed'].target = 0.0
printer['heater_bed'].power = 0.0
printer['idle_timeout'].state = Ready
printer['idle_timeout'].printing_time = 0.0
printer['bed_mesh'].profile_name = 
printer['bed_mesh'].mesh_min = (0.0, 0.0)
printer['bed_mesh'].mesh_max = (0.0, 0.0)
printer['bed_mesh'].probed_matrix = [[]]
printer['bed_mesh'].mesh_matrix = [[]]
printer['bed_mesh'].profiles = {'default': {'points': ((0.154081, 0.138515, 0.128514, 0.127286, 0.124611, 0.114976, 0.105323, 0.100381, 0.095501, 0.088223, 0.086316, 0.085472, 0.082817, 0.083355, 0.082789, 0.08271, 0.083689, 0.085854, 0.085431, 0.097041, 0.09809, 0.082782, 0.076187, 0.076704, 0.080354, 0.082368, 0.085072, 0.084998, 0.09281, 0.098247), (0.13349, 0.117937, 0.107106, 0.107869, 0.105265, 0.097492, 0.089134, 0.086115, 0.083736, 0.078401, 0.076131, 0.076578, 0.074993, 0.074432, 0.073981, 0.073279, 0.076415, 0.07786, 0.076497, 0.080914, 0.079868, 0.073734, 0.067697, 0.06861, 0.074403, 0.0765, 0.076991, 0.07827, 0.084321, 0.091174), (0.115153, 0.098506, 0.090259, 0.089704, 0.089289, 0.081915, 0.074853, 0.071522, 0.070107, 0.065352, 0.064095, 0.064348, 0.063359, 0.063366, 0.062642, 0.063839, 0.066829, 0.068882, 0.065567, 0.06692, 0.067317, 0.063808, 0.061525, 0.062077, 0.067504, 0.069902, 0.071985, 0.0708, 0.075848, 0.082893), (0.10113, 0.086481, 0.078463, 0.078585, 0.076577, 0.071908, 0.064862, 0.062894, 0.061941, 0.057754, 0.058218, 0.057739, 0.056563, 0.057985, 0.058215, 0.060155, 0.063841, 0.064475, 0.061995, 0.06148, 0.062291, 0.062998, 0.059635, 0.060198, 0.063275, 0.064351, 0.064443, 0.064313, 0.068566, 0.07684), (0.087541, 0.072778, 0.064184, 0.065004, 0.064873, 0.059972, 0.054762, 0.052682, 0.05196, 0.047814, 0.048828, 0.048662, 0.047562, 0.049298, 0.05166, 0.054191, 0.056344, 0.058185, 0.055904, 0.056399, 0.058255, 0.059901, 0.057071, 0.054381, 0.057025, 0.058295, 0.060332, 0.060621, 0.065348, 0.073099), (0.076249, 0.062819, 0.053624, 0.055862, 0.054496, 0.050816, 0.045956, 0.044959, 0.043136, 0.040711, 0.040648, 0.042376, 0.041509, 0.04334, 0.046139, 0.048318, 0.050896, 0.052638, 0.051177, 0.052489, 0.054141, 0.055149, 0.052769, 0.050834, 0.053905, 0.056741, 0.057701, 0.057651, 0.060949, 0.068539), (0.062961, 0.050003, 0.042626, 0.044175, 0.044124, 0.039643, 0.034897, 0.032188, 0.032766, 0.030587, 0.030765, 0.031886, 0.032234, 0.033973, 0.036233, 0.038439, 0.041461, 0.043682, 0.043368, 0.044404, 0.045898, 0.047175, 0.045166, 0.044991, 0.048977, 0.050045, 0.051778, 0.050844, 0.05529, 0.062374), (0.050956, 0.04027, 0.033325, 0.035846, 0.035244, 0.031334, 0.026306, 0.025226, 0.022973, 0.019468, 0.021434, 0.024476, 0.023603, 0.024671, 0.028464, 0.030719, 0.03295, 0.035847, 0.035952, 0.037084, 0.038658, 0.039311, 0.037685, 0.036902, 0.041278, 0.043631, 0.044393, 0.045236, 0.048815, 0.058303), (0.042713, 0.032021, 0.025363, 0.026581, 0.026737, 0.023311, 0.019686, 0.016966, 0.014918, 0.011864, 0.012528, 0.015007, 0.014918, 0.01645, 0.019827, 0.023127, 0.026422, 0.029085, 0.029146, 0.028604, 0.03021, 0.031067, 0.031046, 0.031195, 0.034584, 0.037746, 0.038255, 0.03809, 0.043406, 0.051717), (0.03986, 0.027453, 0.021182, 0.022863, 0.022917, 0.020912, 0.01716, 0.014123, 0.010975, 0.00663, 0.007801, 0.009332, 0.009895, 0.013073, 0.017622, 0.019646, 0.02271, 0.025533, 0.02431, 0.024447, 0.025183, 0.02736, 0.026544, 0.028668, 0.03153, 0.033611, 0.03387, 0.034482, 0.038883, 0.047113), (0.03519, 0.023166, 0.01715, 0.019101, 0.01973, 0.017829, 0.013489, 0.010821, 0.007301, 0.002813, 0.002036, 0.004343, 0.00592, 0.008692, 0.012491, 0.015445, 0.018081, 0.020673, 0.019302, 0.020547, 0.022027, 0.022169, 0.023651, 0.024614, 0.029264, 0.028477, 0.029462, 0.030909, 0.035955, 0.04464), (0.033921, 0.021988, 0.016127, 0.020017, 0.019997, 0.016388, 0.01213, 0.009062, 0.005651, 6.3e-05, 0.000562, 0.003104, 0.004318, 0.007276, 0.010945, 0.013736, 0.01723, 0.018198, 0.018597, 0.020125, 0.020377, 0.022048, 0.024396, 0.024846, 0.028748, 0.028733, 0.030112, 0.032135, 0.036788, 0.044542), (0.028808, 0.017942, 0.01169, 0.014128, 0.015093, 0.012077, 0.00919, 0.004887, 0.000938, -0.003359, -0.002585, 0.000434, 0.001961, 0.005127, 0.008239, 0.010209, 0.014649, 0.015873, 0.015798, 0.016549, 0.01913, 0.0219, 0.024279, 0.025609, 0.029862, 0.030183, 0.032042, 0.033011, 0.037531, 0.044496), (0.025406, 0.013062, 0.005861, 0.008686, 0.008794, 0.006143, 0.001285, -0.002287, -0.005018, -0.008235, -0.007544, -0.003896, -0.001625, 0.001842, 0.004821, 0.008042, 0.011677, 0.013234, 0.011671, 0.014442, 0.017085, 0.020866, 0.021648, 0.025144, 0.029767, 0.0306, 0.031196, 0.033438, 0.037162, 0.043925), (0.018291, 0.003178, -0.00167, 0.001088, 0.000339, -0.004234, -0.009113, -0.012708, -0.013906, -0.015547, -0.014544, -0.010613, -0.007343, -0.005425, -0.001451, 0.001954, 0.005816, 0.006086, 0.005187, 0.008722, 0.011897, 0.014608, 0.017355, 0.021177, 0.02668, 0.02721, 0.028475, 0.030401, 0.03505, 0.040087), (0.017694, 0.000862, -0.003867, -0.00199, -0.003857, -0.008963, -0.014916, -0.017121, -0.0191, -0.019156, -0.015733, -0.009463, -0.007295, -0.006527, -0.004802, -0.001575, 0.001832, 0.003353, 0.00276, 0.006186, 0.010032, 0.013781, 0.016525, 0.020997, 0.025907, 0.026782, 0.028688, 0.030938, 0.033691, 0.040304), (0.008715, -0.001131, -0.005699, -0.006195, -0.008356, -0.013533, -0.018623, -0.021585, -0.023171, -0.024161, -0.018911, -0.008744, -0.004454, -0.00802, -0.009078, -0.008268, -0.003879, 3.4e-05, -0.000406, 0.001825, 0.005859, 0.009652, 0.012471, 0.017179, 0.022335, 0.023018, 0.026626, 0.029443, 0.032763, 0.035835), (0.008274, -0.00099, -0.008056, -0.008018, -0.010108, -0.014272, -0.018827, -0.022741, -0.02565, -0.024958, -0.019618, -0.009572, -0.004552, -0.007916, -0.012686, -0.012889, -0.007048, -0.001976, -0.003257, 0.000104, 0.003542, 0.006774, 0.009599, 0.014535, 0.020588, 0.021936, 0.02448, 0.028271, 0.032398, 0.033991), (0.008315, 0.000582, -0.008875, -0.00924, -0.009743, -0.015755, -0.020064, -0.024531, -0.026437, -0.025872, -0.022057, -0.01491, -0.010529, -0.012682, -0.014965, -0.013233, -0.007844, -0.003618, -0.003326, -0.000828, 0.001737, 0.004814, 0.007177, 0.012378, 0.019155, 0.01982, 0.023087, 0.027581, 0.033457, 0.033783), (0.009523, 0.003473, -0.008115, -0.009245, -0.010755, -0.015591, -0.020276, -0.02325, -0.027218, -0.026424, -0.022154, -0.016867, -0.014393, -0.014842, -0.013763, -0.011267, -0.006677, -0.002664, -0.002306, 8.5e-05, 0.000489, 0.003716, 0.005988, 0.01095, 0.017757, 0.019296, 0.022791, 0.028289, 0.034492, 0.037796), (0.008434, 0.003305, -0.009813, -0.011842, -0.014029, -0.017993, -0.022437, -0.024681, -0.027198, -0.028758, -0.024359, -0.021006, -0.019153, -0.017266, -0.015369, -0.013864, -0.007576, -0.004697, -0.005338, -0.004207, -0.003751, -0.001329, 0.001872, 0.006328, 0.012848, 0.014878, 0.017751, 0.024865, 0.032573, 0.037275), (0.009409, 0.00483, -0.010134, -0.012979, -0.013999, -0.017017, -0.021707, -0.023399, -0.025937, -0.027401, -0.025787, -0.023583, -0.021286, -0.018405, -0.015728, -0.013021, -0.007507, -0.003813, -0.005274, -0.005105, -0.003882, -0.00076, 0.0014, 0.006236, 0.013575, 0.013793, 0.016928, 0.023542, 0.033651, 0.040292), (0.012681, 0.00365, -0.011519, -0.013592, -0.013007, -0.016088, -0.020317, -0.021148, -0.023677, -0.02675, -0.025591, -0.022852, -0.02182, -0.017047, -0.013421, -0.010105, -0.003187, -0.001311, -0.002738, -0.00097, 0.000578, 0.00237, 0.004994, 0.010895, 0.016466, 0.017294, 0.019258, 0.028104, 0.037919, 0.04492), (0.023053, 0.007329, -0.007665, -0.008696, -0.008199, -0.011085, -0.015024, -0.01646, -0.0193, -0.022497, -0.021682, -0.020567, -0.017431, -0.012789, -0.007704, -0.002037, 0.003866, 0.00625, 0.004982, 0.005306, 0.006662, 0.009518, 0.011527, 0.016232, 0.020107, 0.021472, 0.024146, 0.031093, 0.041812, 0.050079), (0.029288, 0.009673, -0.004443, -0.005567, -0.004605, -0.00621, -0.010185, -0.012755, -0.015566, -0.018724, -0.018666, -0.016853, -0.013916, -0.008459, -0.002019, 0.003235, 0.009409, 0.013119, 0.011229, 0.010323, 0.010575, 0.01215, 0.014287, 0.017538, 0.022219, 0.022162, 0.023755, 0.031374, 0.042052, 0.04916), (0.03452, 0.016344, 0.00247, 0.002003, 0.004102, 0.002468, -0.000679, -0.00163, -0.004204, -0.008491, -0.009158, -0.007186, -0.004222, 0.000618, 0.008471, 0.013685, 0.018326, 0.02099, 0.018952, 0.01761, 0.016439, 0.018096, 0.018612, 0.021467, 0.026018, 0.024606, 0.026504, 0.033649, 0.043138, 0.049695), (0.040989, 0.023426, 0.01073, 0.010593, 0.012624, 0.010471, 0.008444, 0.009828, 0.007719, 0.00222, 0.001497, 0.003871, 0.006004, 0.010458, 0.016901, 0.022482, 0.026374, 0.02761, 0.024551, 0.02344, 0.021441, 0.022861, 0.022914, 0.02577, 0.028328, 0.027841, 0.027552, 0.034131, 0.043074, 0.048597), (0.054196, 0.036317, 0.022173, 0.022984, 0.02461, 0.023046, 0.0211, 0.022848, 0.021239, 0.015733, 0.014907, 0.017676, 0.020253, 0.024232, 0.028896, 0.033068, 0.037739, 0.039009, 0.035866, 0.03322, 0.03219, 0.032375, 0.033207, 0.032898, 0.034894, 0.033152, 0.03361, 0.039576, 0.047877, 0.053834), (0.069154, 0.049538, 0.034101, 0.033598, 0.035192, 0.034897, 0.033264, 0.033966, 0.032399, 0.026413, 0.025919, 0.029939, 0.032117, 0.035207, 0.039697, 0.043255, 0.047065, 0.04902, 0.044302, 0.042012, 0.040376, 0.041479, 0.0402, 0.03959, 0.03976, 0.037849, 0.038269, 0.044078, 0.052012, 0.057973), (0.092874, 0.067424, 0.048158, 0.047359, 0.048967, 0.048404, 0.046286, 0.047192, 0.045016, 0.039761, 0.039884, 0.043235, 0.046178, 0.04911, 0.053155, 0.056352, 0.060047, 0.059708, 0.05387, 0.051188, 0.050336, 0.049519, 0.047828, 0.047118, 0.048008, 0.045242, 0.045325, 0.049244, 0.056162, 0.063266)), 'mesh_params': OrderedDict([('min_x', 30.0), ('max_x', 320.0), ('min_y', 30.0), ('max_y', 320.0), ('x_count', 30), ('y_count', 30), ('mesh_x_pps', 2), ('mesh_y_pps', 2), ('algo', 'bicubic'), ('tension', 0.2)])}}
printer['z_tilt'].applied = False
printer['gcode_macro PROBECALIBRATE'] = {}
printer['gcode_macro G32'] = {}
printer['tmc2209 extruder'].mcu_phase_offset = 3
printer['tmc2209 extruder'].phase_offset_position = 0.00492875
printer['tmc2209 extruder'].run_current = 0.6119193298729737
printer['tmc2209 extruder'].hold_current = 0.6119193298729737
printer['tmc2209 extruder'].drv_status = None
printer['tmc2209 extruder'].temperature = None
printer['fan_generic Part_Fan'].speed = 0.0
printer['fan_generic Part_Fan'].rpm = None
printer['heater_fan Hotend_Fan'].speed = 0.0
printer['heater_fan Hotend_Fan'].rpm = None
printer['temperature_sensor MCU_THB'].temperature = 35.55
printer['temperature_sensor MCU_THB'].measured_min_temp = 35.51
printer['temperature_sensor MCU_THB'].measured_max_temp = 35.87
printer['neopixel th_led'].color_data = [(1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0)]
printer['mcu scanner'].mcu_version = CARTOGRAPHER 5.1.0
printer['mcu scanner'].mcu_build_versions = 
printer['mcu scanner'].mcu_constants = {'ADC_MAX': 4095, 'BUS_PINS_i2c1': 'PB6,PB7', 'BUS_PINS_spi1': 'PA6,PA7,PA5', 'CANBUS_FREQUENCY': 1000000, 'CARTOGRAPHER_ADC_SMOOTH_COUNT': 16, 'CLOCK_FREQ': 48000000, 'MCU': 'stm32f042x6', 'PWM_MAX': 2, 'RECEIVE_WINDOW': 192, 'RESERVE_PINS_CAN': 'PA11,PA12', 'RESERVE_PINS_crystal': 'PF0,PF1', 'STATS_SUMSQ_BASE': 256, 'STEPPER_BOTH_EDGE': 1}
printer['mcu scanner'].last_stats = {'mcu_awake': 0.028, 'mcu_task_avg': 1.1e-05, 'mcu_task_stddev': 2.5e-05, 'bytes_write': 778, 'bytes_read': 4788, 'bytes_retransmit': 0, 'bytes_invalid': 0, 'send_seq': 105, 'receive_seq': 105, 'retransmit_seq': 0, 'srtt': 0.001, 'rttvar': 0.0, 'rto': 0.025, 'ready_bytes': 0, 'upcoming_bytes': 0, 'freq': 47998746, 'adj': 47999867}
printer['probe'].name = scanner
printer['probe'].last_z_result = 0.0
printer['temperature_sensor cartographer_coil'].temperature = 27.72
printer['temperature_sensor cartographer_coil'].measured_min_temp = 27.67
printer['temperature_sensor cartographer_coil'].measured_max_temp = 27.79
printer['scanner'].last_sample = None
printer['scanner'].last_received_sample = {'clock': 882534492, 'data': 33416825, 'temp': 27.723019263206993, '#name': 'cartographer_data', '#sent_time': 53.106367746, '#receive_time': 53.451946227, 'time': 18.37258092810722, 'data_smooth': 33417051.235561542, 'freq': 2987717.202505011}
printer['scanner'].model = default
printer['temperature_sensor MCU_Carto'].temperature = 38.85
printer['temperature_sensor MCU_Carto'].measured_min_temp = 37.93
printer['temperature_sensor MCU_Carto'].measured_max_temp = 39.32
printer['gcode_macro PROBE_CALIBRATE'] = {}
printer['gcode_macro DATA_SAMPLE'] = {}
printer['motors_sync'].applied = False
printer['temperature_sensor MCU_Manta'].temperature = 52.21
printer['temperature_sensor MCU_Manta'].measured_min_temp = 52.11
printer['temperature_sensor MCU_Manta'].measured_max_temp = 52.81
printer['temperature_host CM4'].temperature = 50.63
printer['temperature_sensor CM4'].temperature = 50.63
printer['temperature_sensor CM4'].measured_min_temp = 50.15
printer['temperature_sensor CM4'].measured_max_temp = 52.09
printer['temperature_sensor Chamber_Top'].temperature = 26.96
printer['temperature_sensor Chamber_Top'].measured_min_temp = 26.93
printer['temperature_sensor Chamber_Top'].measured_max_temp = 27.04
printer['temperature_sensor Chamber_Bottom'].temperature = 25.34
printer['temperature_sensor Chamber_Bottom'].measured_min_temp = 25.34
printer['temperature_sensor Chamber_Bottom'].measured_max_temp = 25.54
printer['temperature_fan Electronics_Bay'].speed = 1.0
printer['temperature_fan Electronics_Bay'].rpm = None
printer['temperature_fan Electronics_Bay'].temperature = 37.58
printer['temperature_fan Electronics_Bay'].target = 30.0
printer['controller_fan Driver_Fan'].speed = 0.0
printer['controller_fan Driver_Fan'].rpm = None
printer['fan_generic Bed_Fan'].speed = 0.0
printer['fan_generic Bed_Fan'].rpm = None
printer['fan_generic Fume_Fan'].speed = 0.0
printer['fan_generic Fume_Fan'].rpm = None
printer['gcode_macro M106'] = {}
printer['gcode_macro _LED_STATUS_OFF_TH'] = {}
printer['gcode_macro _STATUS_TH_LED'] = {}
printer['gcode_macro _LED_STATUS_IDLE_TH'] = {}
printer['gcode_macro _LED_STATUS_READY_TH'] = {}
printer['gcode_macro _LED_STATUS_PRINTING_TH'] = {}
printer['neopixel chamber'].color_data = [(1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0), (1.0, 1.0, 1.0, 0.0)]
printer['gcode_macro LED_OFF'] = {}
printer['gcode_macro LED_ON'] = {}
printer['gcode_macro _STATUS_CHAMBER_LED'] = {}
printer['gcode_macro _LED_STATUS_IDLE'] = {}
printer['gcode_macro _LED_STATUS_READY'] = {}
printer['gcode_macro _LED_STATUS_PRINTING'] = {}
printer['gcode_macro _LED_Rainbow'] = {}
printer['gcode_macro _LED_RainbowGreg'] = {}
printer['gcode_macro _LED_Epilepsie'] = {}
printer['gcode_macro _LED_Commet'] = {}
printer['gcode_macro _LED_DoubleCommet'] = {}
printer['gcode_macro LED_KITT'] = {}
printer['gcode_macro _LED_Pacman'] = {}
printer['gcode_macro _LED_White'] = {}
printer['pause_resume'].is_paused = False
printer['gcode_macro SET_PAUSE_NEXT_LAYER'] = {}
printer['gcode_macro SET_PAUSE_AT_LAYER'] = {}
printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer = {'enable': False, 'call': 'PAUSE'}
printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer = {'enable': False, 'layer': 0, 'call': 'PAUSE'}
printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'] = {}
printer['gcode_macro _CLIENT_EXTRUDE'] = {}
printer['gcode_macro _CLIENT_RETRACT'] = {}
printer['gcode_macro _CLIENT_LINEAR_MOVE'] = {}
printer['gcode_macro SET_ACTIVE_SPOOL'] = {}
printer['gcode_macro CLEAR_ACTIVE_SPOOL'] = {}
printer['gcode_macro GET_TIMELAPSE_SETUP'] = {}
printer['gcode_macro _SET_TIMELAPSE_SETUP'] = {}
printer['gcode_macro TIMELAPSE_TAKE_FRAME'].enable = True
printer['gcode_macro TIMELAPSE_TAKE_FRAME'].takingframe = False
printer['gcode_macro TIMELAPSE_TAKE_FRAME'].park = {'enable': False, 'pos': 'back_left', 'time': 0.1, 'custom': {'x': 10.0, 'y': 10.0, 'dz': 0.0}, 'coord': {'x': 0.0, 'y': 360.0, 'dz': 0}}
printer['gcode_macro TIMELAPSE_TAKE_FRAME'].extruder = {'fw_retract': False, 'retract': 1.0, 'extrude': 1.0}
printer['gcode_macro TIMELAPSE_TAKE_FRAME'].speed = {'travel': 100.0, 'retract': 15.0, 'extrude': 15.0}
printer['gcode_macro TIMELAPSE_TAKE_FRAME'].verbose = False
printer['gcode_macro TIMELAPSE_TAKE_FRAME'].check_time = 0.5
printer['gcode_macro TIMELAPSE_TAKE_FRAME'].restore = {'absolute': {'coordinates': True, 'extrude': True}, 'speed': 1500, 'e': 0, 'factor': {'speed': 1.0, 'extrude': 1.0}}
printer['gcode_macro TIMELAPSE_TAKE_FRAME'].macro = {'pause': 'PAUSE_BASE', 'resume': 'RESUME_BASE'}
printer['gcode_macro TIMELAPSE_TAKE_FRAME'].is_paused = False
printer['gcode_macro _TIMELAPSE_NEW_FRAME'] = {}
printer['gcode_macro HYPERLAPSE'].cycle = 0
printer['gcode_macro HYPERLAPSE'].run = False
printer['gcode_macro TIMELAPSE_RENDER'].render = False
printer['gcode_macro TIMELAPSE_RENDER'].run_identifier = 0
printer['gcode_macro TEST_STREAM_DELAY'] = {}
printer['motion_report'].live_position = Coord(x=0.0, y=0.0, z=0.0, e=0.0)
printer['motion_report'].live_velocity = 0.0
printer['motion_report'].live_extruder_velocity = 0.0
printer['motion_report'].steppers = ['extruder', 'stepper_x', 'stepper_x1', 'stepper_y', 'stepper_y1', 'stepper_z', 'stepper_z1', 'stepper_z2']
printer['motion_report'].trapq = ['extruder', 'toolhead']
printer['query_endstops'].last_query = {}
printer['system_stats'].sysload = 1.814453125
printer['system_stats'].cputime = 12.359267945
printer['system_stats'].memavail = 3181204
printer['manual_probe'].is_active = False
printer['manual_probe'].z_position = None
printer['manual_probe'].z_position_lower = None
printer['manual_probe'].z_position_upper = None
printer['toolhead'].homed_axes = 
printer['toolhead'].axis_minimum = Coord(x=0.0, y=0.0, z=-5.0, e=0.0)
printer['toolhead'].axis_maximum = Coord(x=350.0, y=360.0, z=245.0, e=0.0)
printer['toolhead'].print_time = 10.684525495
printer['toolhead'].stalls = 0
printer['toolhead'].estimated_print_time = 18.39811128
printer['toolhead'].extruder = extruder
printer['toolhead'].position = Coord(x=0.0, y=0.0, z=0.0, e=0.0)
printer['toolhead'].max_velocity = 1000.0
printer['toolhead'].max_accel = 12000.0
printer['toolhead'].minimum_cruise_ratio = 0.5
printer['toolhead'].square_corner_velocity = 5.0
printer['extruder'].temperature = 28.34
printer['extruder'].target = 0.0
printer['extruder'].power = 0.0
printer['extruder'].can_extrude = False
printer['extruder'].pressure_advance = 0.04
printer['extruder'].smooth_time = 0.04
printer['extruder'].motion_queue = None
