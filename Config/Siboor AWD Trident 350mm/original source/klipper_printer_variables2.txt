// printer['gcode'].commands = {'M110': {}, 'M112': {}, 'M115': {}, 'RESTART': {'help': 'Reload config file and restart host software'}, 'FIRMWARE_RESTART': {'help': 'Restart firmware, host, and reload config'}, 'ECHO': {}, 'STATUS': {'help': 'Report the printer status'}, 'HELP': {'help': 'Report the list of available extended G-Code commands'}, 'SAVE_CONFIG': {'help': 'Overwrite config file and restart'}, 'G1': {}, 'G20': {}, 'G21': {}, 'M82': {}, 'M83': {}, 'G90': {}, 'G91': {}, 'G92': {}, 'M220': {}, 'M221': {}, 'SET_GCODE_OFFSET': {'help': 'Set a virtual offset to g-code positions'}, 'SAVE_GCODE_STATE': {'help': 'Save G-Code coordinate state'}, 'RESTORE_GCODE_STATE': {'help': 'Restore a previously saved G-Code state'}, 'G0': {}, 'M114': {}, 'GET_POSITION': {'help': 'Return information on the current location of the toolhead'}, 'M20': {}, 'M21': {}, 'M23': {}, 'M26': {}, 'M27': {}, 'M28': {}, 'M29': {}, 'M30': {}, 'SDCARD_RESET_FILE': {'help': 'Clears a loaded SD File. Stops the print if necessary'}, 'SDCARD_PRINT_FILE': {'help': 'Loads a SD file and starts the print.  May include files in subdirectories.'}, 'G2': {}, 'G3': {}, 'G17': {}, 'G18': {}, 'G19': {}, 'EXCLUDE_OBJECT_START': {'help': 'Marks the beginning the current object as labeled'}, 'EXCLUDE_OBJECT_END': {'help': 'Marks the end the current object'}, 'EXCLUDE_OBJECT': {'help': 'Cancel moves inside a specified objects'}, 'EXCLUDE_OBJECT_DEFINE': {'help': 'Provides a summary of an object'}, 'M118': {}, 'RESPOND': {'help': 'Echo the message prepended with a prefix'}, 'M73': {}, 'M117': {}, 'SET_DISPLAY_TEXT': {'help': 'Set or clear the display message'}, 'STEPPER_BUZZ': {'help': 'Oscillate a given stepper to help id it'}, 'FORCE_MOVE': {'help': 'Manually move a stepper; invalidates kinematics'}, 'SET_KINEMATIC_POSITION': {'help': 'Force a low-level kinematic position'}, '_EXCITATE_AXIS_AT_FREQ': {'help': 'Maintain a specified excitation frequency for a period of time to diagnose and locate a source of vibrations'}, '_AXES_MAP_CALIBRATION': {'help': 'Perform a set of movements to measure the orientation of the accelerometer and help you set the best axes_map configuration for your printer'}, '_COMPARE_BELTS_RESPONSES': {'help': 'Perform a custom half-axis test to analyze and compare the frequency profiles of individual belts on CoreXY or CoreXZ printers'}, '_AXES_SHAPER_CALIBRATION': {'help': 'Perform standard axis input shaper tests on one or both XY axes to select the best input shaper filter'}, '_CREATE_VIBRATIONS_PROFILE': {'help': 'Run a series of motions to find speed/angle ranges where the printer could be exposed to VFAs to optimize your slicer speed profiles and TMC driver parameters'}, 'EXCITATE_AXIS_AT_FREQ': {'help': 'Maintain a specified excitation frequency for a period of time to diagnose and locate a source of vibrations'}, 'SET_GCODE_VARIABLE': {'help': 'Set the value of a G-Code macro variable'}, 'AXES_MAP_CALIBRATION': {'help': 'Perform a set of movements to measure the orientation of the accelerometer and help you set the best axes_map configuration for your printer'}, 'COMPARE_BELTS_RESPONSES': {'help': 'Perform a custom half-axis test to analyze and compare the frequency profiles of individual belts on CoreXY or CoreXZ printers'}, 'AXES_SHAPER_CALIBRATION': {'help': 'Perform standard axis input shaper tests on one or both XY axes to select the best input shaper filter'}, 'CREATE_VIBRATIONS_PROFILE': {'help': 'Run a series of motions to find speed/angle ranges where the printer could be exposed to VFAs to optimize your slicer speed profiles and TMC driver parameters'}, '_STATUS_VARIABLES': {'help': 'G-Code macro'}, 'SET_STATUS': {'help': 'Set Printer Status'}, 'RESET_STATUS': {'help': 'G-Code macro'}, '_EFFECT_STATUS': {'help': 'G-Code macro'}, '_STATUS_CONSOLE': {'help': 'G-Code macro'}, '_STATUS_KLIPPER_SCREEN': {'help': 'G-Code macro'}, 'CALIBRATE_HOTEND': {'help': 'Run PID calibration on hotend at optional temp set in menu'}, 'CALIBRATE_BEDHEATER': {'help': 'Run PID calibration on bed heater at optional temp set in menu'}, 'RUN_SHELL_COMMAND': {'help': 'Run a linux shell command'}, 'TEST_SPEED': {'help': 'Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU'}, 'DUMP_VARIABLES': {'help': "Macro to dump all printer variables excluding 'configfile'"}, 'UPDATE_DELAYED_GCODE': {'help': 'Update the duration of a delayed_gcode'}, 'START_PRINT': {'help': 'Common Start Print routine'}, 'PRINT_START': {'help': 'Common Start Print routine'}, 'END_PRINT': {'help': 'Common END Print routine'}, 'PRINT_END': {'help': 'G-Code macro'}, 'HOME_IF_NEEDED': {'help': 'G-Code macro'}, 'LOAD_FILAMENT': {'help': 'G-Code macro'}, 'UNLOAD_FILAMENT': {'help': 'G-Code macro'}, 'DROP_BED': {'help': 'Move bed down to lowest Level'}, 'DRAW_PRIMING_LINES': {'help': 'Purge lines at front of bed'}, 'HEAT_SOAK': {'help': 'Heats the bed and performs a soak.'}, 'CANCEL_HEAT_SOAK': {'help': 'Cancels an in-progress HEAT_SOAK cycle'}, '_SOAK_COMPLETE': {'help': 'Finish the soak command'}, 'RAZZLE_DAZZLE': {'help': 'Move head around the space fast! Fxxx is mm/min'}, 'M18': {}, 'M84': {}, 'SET_STEPPER_ENABLE': {'help': 'Enable/disable individual stepper by name'}, 'SET_TMC_FIELD': {'help': 'Set a register field of a TMC driver'}, 'INIT_TMC': {'help': 'Initialize TMC stepper driver registers'}, 'SET_TMC_CURRENT': {'help': 'Set the current of a TMC driver'}, 'DUMP_TMC': {'help': 'Read and display TMC stepper driver registers'}, 'M105': {}, 'TEMPERATURE_WAIT': {'help': 'Wait for a temperature on a sensor'}, 'QUERY_ADC': {'help': 'Report the last value of an analog pin'}, 'PID_CALIBRATE': {'help': 'Run PID calibration test'}, 'M140': {}, 'SET_IDLE_TIMEOUT': {'help': 'Set the idle timeout in seconds'}, 'BED_MESH_PROFILE': {'help': 'Bed Mesh Persistent Storage management'}, 'BED_MESH_OUTPUT': {'help': 'Retrieve interpolated grid of probed z-points'}, 'BED_MESH_MAP': {'help': 'Serialize mesh and output to terminal'}, 'BED_MESH_CLEAR': {'help': 'Clear the Mesh so no z-adjustment is made'}, 'BED_MESH_OFFSET': {'help': 'Add X/Y offsets to the mesh lookup'}, 'PROBECALIBRATE': {'help': 'G-Code macro'}, 'G32': {'help': 'G-Code macro'}, 'SET_FAN_SPEED': {'help': 'Sets the speed of a fan'}, 'SET_LED': {'help': 'Set the color of an LED'}, 'SET_LED_TEMPLATE': {'help': 'Assign a display_template to an LED'}, 'SET_RETRACTION': {'help': 'Set firmware retraction parameters'}, 'GET_RETRACTION': {'help': 'Report firmware retraction paramters'}, 'G10': {}, 'G11': {}, 'SET_INPUT_SHAPER': {'help': 'Set cartesian parameters for input shaper'}, 'CARTOGRAPHER_MODEL_SELECT': {'help': 'Load named scanner model'}, 'CARTOGRAPHER_MODEL_SAVE': {'help': 'Save current scanner model'}, 'CARTOGRAPHER_MODEL_REMOVE': {'help': 'Remove saved scanner model'}, 'CARTOGRAPHER_MODEL_LIST': {'help': 'Remove saved scanner model'}, 'CARTO_MODEL_SELECT': {'help': 'Load named scanner model'}, 'CARTO_MODEL_SAVE': {'help': 'Save current scanner model'}, 'CARTO_MODEL_REMOVE': {'help': 'Remove saved scanner model'}, 'CARTO_MODEL_LIST': {'help': 'Remove saved scanner model'}, 'CARTOGRAPHER_STREAM': {'help': 'Enable Scanner Streaming'}, 'CARTOGRAPHER_QUERY': {'help': 'Take a sample from the sensor'}, 'CARTOGRAPHER_CALIBRATE': {'help': 'Calibrate scanner response curve'}, 'CARTOGRAPHER_THRESHOLD_SCAN': {'help': 'Scan THRESHOLD in TOUCH mode'}, 'CARTOGRAPHER_ESTIMATE_BACKLASH': {'help': 'Estimate Z axis backlash'}, 'CARTO_STREAM': {'help': 'Enable Scanner Streaming'}, 'CARTO_QUERY': {'help': 'Take a sample from the sensor'}, 'CARTO_CALIBRATE': {'help': 'Calibrate scanner response curve'}, 'CARTO_THRESHOLD_SCAN': {'help': 'Scan THRESHOLD in TOUCH mode'}, 'CARTO_ESTIMATE_BACKLASH': {'help': 'Estimate Z axis backlash'}, 'CARTO_TOUCH': {'help': 'Home in TOUCH mode'}, 'PROBE': {'help': 'Probe Z-height at current XY position'}, 'PROBE_ACCURACY': {'help': 'Probe Z-height accuracy at current XY position'}, 'PROBE_SWITCH': {'help': 'swith between scan and touch'}, 'Z_OFFSET_APPLY_PROBE': {'help': "Adjust the probe's z_offset"}, 'ACCELEROMETER_MEASURE': {'help': 'Start/stop accelerometer'}, 'ACCELEROMETER_QUERY': {'help': 'Query accelerometer for the current values'}, 'ACCELEROMETER_DEBUG_READ': {'help': 'Query register (for debugging)'}, 'ACCELEROMETER_DEBUG_WRITE': {'help': 'Set register (for debugging)'}, 'MEASURE_AXES_NOISE': {'help': 'Measures noise of all enabled accelerometer chips'}, 'SHAPER_CALIBRATE': {'help': 'Simular to TEST_RESONANCES but suggest input shaper config'}, 'PROBE_CALIBRATE': {'help': 'G-Code macro'}, 'DATA_SAMPLE': {'help': 'G-Code macro'}, 'SYNC_MOTORS': {'help': 'Start motors synchronization'}, 'SYNC_MOTORS_CALIBRATE': {'help': 'Calibrate synchronization process model'}, 'SYNC_MOTORS_STATS': {'help': 'Show statistics'}, 'SET_TEMPERATURE_FAN_TARGET': {'help': 'Sets a temperature fan target and fan speed limits'}, 'M106': {'help': 'Set Fan [0,2,3] to speed 0-255'}, 'CLEAR_PAUSE': {'help': 'Clears the current paused state without resuming the print'}, 'SET_PAUSE_NEXT_LAYER': {'help': 'Enable a pause if the next layer is reached'}, 'SET_PAUSE_AT_LAYER': {'help': 'Enable/disable a pause if a given layer number is reached'}, '_TOOLHEAD_PARK_PAUSE_CANCEL': {'help': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, '_CLIENT_EXTRUDE': {'help': 'Extrudes, if the extruder is hot enough'}, '_CLIENT_RETRACT': {'help': 'Retracts, if the extruder is hot enough'}, '_CLIENT_LINEAR_MOVE': {'help': 'Linear move with save and restore of the gcode state'}, 'SET_ACTIVE_SPOOL': {'help': 'G-Code macro'}, 'CLEAR_ACTIVE_SPOOL': {'help': 'G-Code macro'}, 'GET_TIMELAPSE_SETUP': {'help': 'Print the Timelapse setup'}, '_SET_TIMELAPSE_SETUP': {'help': 'Set user parameters for timelapse'}, 'TIMELAPSE_TAKE_FRAME': {'help': 'Take Timelapse shoot'}, '_TIMELAPSE_NEW_FRAME': {'help': 'action call for timelapse shoot. must be a seperate macro'}, 'HYPERLAPSE': {'help': 'Start/Stop a hyperlapse recording'}, 'TIMELAPSE_RENDER': {'help': 'Render Timelapse video and wait for the result'}, 'TEST_STREAM_DELAY': {'help': 'Helper macro to find stream and park delay'}, 'QUERY_ENDSTOPS': {'help': 'Report on the status of each endstop'}, 'M119': {}, 'G4': {}, 'M400': {}, 'SET_VELOCITY_LIMIT': {'help': 'Set printer velocity limits'}, 'M204': {}, 'MANUAL_PROBE': {'help': 'Start manual probe helper script'}, 'TUNING_TOWER': {'help': 'Tool to adjust a parameter at each Z height'}, 'SET_PRESSURE_ADVANCE': {'help': 'Set pressure advance parameters'}, 'SET_EXTRUDER_ROTATION_DISTANCE': {'help': 'Set extruder rotation distance'}, 'SYNC_EXTRUDER_MOTION': {'help': 'Set extruder stepper motion queue'}, 'M104': {}, 'ACTIVATE_EXTRUDER': {'help': 'Change the active extruder'}, 'M24.1': {'help': "Renamed builtin of 'M24'"}, 'M24': {'help': 'Resume/Pause Print'}, 'M25.1': {'help': "Renamed builtin of 'M25'"}, 'M25': {'help': 'Pause Print'}, 'Z_TILT_ADJUST_SI': {'help': "Renamed builtin of 'Z_TILT_ADJUST'"}, 'Z_TILT_ADJUST': {'help': 'Level Bed to fixed gantry'}, 'TURN_OFF_HEATERS_SI': {'help': "Renamed builtin of 'TURN_OFF_HEATERS'"}, 'TURN_OFF_HEATERS': {'help': 'G-Code macro'}, 'SET_HEATER_TEMPERATURE_SI': {'help': "Renamed builtin of 'SET_HEATER_TEMPERATURE'"}, 'SET_HEATER_TEMPERATURE': {'help': 'G-Code macro'}, 'M109.1': {'help': "Renamed builtin of 'M109'"}, 'M109': {'help': 'G-Code macro'}, 'M190.1': {'help': "Renamed builtin of 'M190'"}, 'M190': {'help': 'G-Code macro'}, 'G28.1': {'help': "Renamed builtin of 'G28'"}, 'G28': {'help': 'G-Code macro'}, 'BED_MESH_CALIBRATE_SI': {'help': "Renamed builtin of 'BED_MESH_CALIBRATE'"}, 'BED_MESH_CALIBRATE': {'help': 'G-Code macro'}, 'TEST_RESONANCES_SI': {'help': "Renamed builtin of 'TEST_RESONANCES'"}, 'TEST_RESONANCES': {'help': 'G-Code macro'}, 'CARTOGRAPHER_TOUCH_SI': {'help': "Renamed builtin of 'CARTOGRAPHER_TOUCH'"}, 'CARTOGRAPHER_TOUCH': {'help': 'G-Code macro'}, 'PAUSE_BASE': {'help': "Renamed builtin of 'PAUSE'"}, 'PAUSE': {'help': 'Pause the actual running print'}, 'RESUME_BASE': {'help': "Renamed builtin of 'RESUME'"}, 'RESUME': {'help': 'Resume the actual running print'}, 'CANCEL_PRINT_BASE': {'help': "Renamed builtin of 'CANCEL_PRINT'"}, 'CANCEL_PRINT': {'help': 'Cancel the actual running print'}, 'SET_PRINT_STATS_INFO_BASE': {'help': "Renamed builtin of 'SET_PRINT_STATS_INFO'"}, 'SET_PRINT_STATS_INFO': {'help': 'Overwrite, to get pause_next_layer and pause_at_layer feature'}}
// printer['webhooks'].state = ready
// printer['webhooks'].state_message = Printer is ready
// printer['configfile'].warnings = []
// printer['configfile'].save_config_pending = False
// printer['configfile'].save_config_pending_items = {}
// printer['mcu'].mcu_version = v0.12.0-396-gb7233d119
// printer['mcu'].mcu_build_versions = gcc: (15:12.2.rel1-1) 12.2.1 20221205 binutils: (2.40-2+18+b1) 2.40
// printer['mcu'].mcu_constants = {'ADC_MAX': 4095, 'BUS_PINS_i2c1_PB6_PB7': 'PB6,PB7', 'BUS_PINS_i2c1_PB8_PB9': 'PB8,PB9', 'BUS_PINS_i2c2_PB10_PB11': 'PB10,PB11', 'BUS_PINS_i2c3_PA8_PC9': 'PA8,PC9', 'BUS_PINS_spi1': 'PA6,PA7,PA5', 'BUS_PINS_spi1a': 'PB4,PB5,PB3', 'BUS_PINS_spi2': 'PB14,PB15,PB13', 'BUS_PINS_spi2a': 'PC2,PC3,PB10', 'BUS_PINS_spi3a': 'PC11,PC12,PC10', 'BUS_PINS_spi4': 'PE13,PE14,PE12', 'BUS_PINS_spi5': 'PF8,PF9,PF7', 'BUS_PINS_spi5a': 'PH7,PF11,PH6', 'BUS_PINS_spi6': 'PG12,PG14,PG13', 'CANBUS_BRIDGE': 1, 'CLOCK_FREQ': 400000000, 'MCU': 'stm32h723xx', 'PWM_MAX': 255, 'RECEIVE_WINDOW': 192, 'RESERVE_PINS_CAN': 'PD0,PD1', 'RESERVE_PINS_USB': 'PA11,PA12', 'RESERVE_PINS_crystal': 'PH0,PH1', 'STATS_SUMSQ_BASE': 256, 'STEPPER_BOTH_EDGE': 1}
// printer['mcu'].last_stats = {'mcu_awake': 0.003, 'mcu_task_avg': 2e-06, 'mcu_task_stddev': 3e-06, 'bytes_write': 35535, 'bytes_read': 62496, 'bytes_retransmit': 0, 'bytes_invalid': 0, 'send_seq': 1764, 'receive_seq': 1764, 'retransmit_seq': 0, 'srtt': 0.001, 'rttvar': 0.0, 'rto': 0.025, 'ready_bytes': 0, 'upcoming_bytes': 0, 'freq': 399994604}
// printer['mcu THB'].mcu_version = v0.12.0-396-gb7233d119
// printer['mcu THB'].mcu_build_versions = gcc: (15:12.2.rel1-1) 12.2.1 20221205 binutils: (2.40-2+18+b1) 2.40
// printer['mcu THB'].mcu_constants = {'ADC_MAX': 4095, 'BUS_PINS_i2c1_PA9_PA10': 'PA9,PA10', 'BUS_PINS_i2c1_PB6_PB7': 'PB6,PB7', 'BUS_PINS_i2c1_PB8_PB9': 'PB8,PB9', 'BUS_PINS_i2c2_PB10_PB11': 'PB10,PB11', 'BUS_PINS_i2c2_PB13_PB14': 'PB13,PB14', 'BUS_PINS_i2c3_PB3_PB4': 'PB3,PB4', 'BUS_PINS_i2c3_PC0_PC1': 'PC0,PC1', 'BUS_PINS_spi1': 'PA6,PA7,PA5', 'BUS_PINS_spi1a': 'PB4,PB5,PB3', 'BUS_PINS_spi2': 'PB14,PB15,PB13', 'BUS_PINS_spi2_PB2_PB11_PB10': 'PB2,PB11,PB10', 'BUS_PINS_spi2a': 'PC2,PC3,PB10', 'BUS_PINS_spi3': 'PB4,PB5,PB3', 'CANBUS_FREQUENCY': 1000000, 'CLOCK_FREQ': 64000000, 'MCU': 'stm32g0b1xx', 'PWM_MAX': 255, 'RECEIVE_WINDOW': 192, 'RESERVE_PINS_CAN': 'PB0,PB1', 'RESERVE_PINS_crystal': 'PF0,PF1', 'STATS_SUMSQ_BASE': 256, 'STEPPER_BOTH_EDGE': 1}
// printer['mcu THB'].last_stats = {'mcu_awake': 0.002, 'mcu_task_avg': 1.5e-05, 'mcu_task_stddev': 2.1e-05, 'bytes_write': 4497, 'bytes_read': 24420, 'bytes_retransmit': 0, 'bytes_invalid': 0, 'send_seq': 468, 'receive_seq': 468, 'retransmit_seq': 0, 'srtt': 0.001, 'rttvar': 0.0, 'rto': 0.025, 'ready_bytes': 0, 'upcoming_bytes': 0, 'freq': 63999920, 'adj': 64000710}
// printer['gcode_move'].speed_factor = 1.0
// printer['gcode_move'].speed = 24000.0
// printer['gcode_move'].extrude_factor = 1.0
// printer['gcode_move'].absolute_coordinates = True
// printer['gcode_move'].absolute_extrude = True
// printer['gcode_move'].homing_origin = Coord(x=0.0, y=0.0, z=0.0, e=0.0)
// printer['gcode_move'].position = Coord(x=175.0, y=175.0, z=10.0, e=0.0)
// printer['gcode_move'].gcode_position = Coord(x=175.0, y=175.0, z=10.0, e=0.0)
// printer['print_stats'].filename =
// printer['print_stats'].total_duration = 0.0
// printer['print_stats'].print_duration = 0.0
// printer['print_stats'].filament_used = 0.0
// printer['print_stats'].state = standby
// printer['print_stats'].message =
// printer['print_stats'].info = {'total_layer': None, 'current_layer': None}
// printer['virtual_sdcard'].file_path = None
// printer['virtual_sdcard'].progress = 0.0
// printer['virtual_sdcard'].is_active = False
// printer['virtual_sdcard'].file_position = 0
// printer['virtual_sdcard'].file_size = 0
// printer['exclude_object'].objects = []
// printer['exclude_object'].excluded_objects = []
// printer['exclude_object'].current_object = None
// printer['display_status'].progress = 0.0
// printer['display_status'].message = Ready
// printer['gcode_macro excitate_axis_at_freq'] = {}
// printer['gcode_macro axes_map_calibration'] = {}
// printer['gcode_macro compare_belts_responses'] = {}
// printer['gcode_macro axes_shaper_calibration'] = {}
// printer['gcode_macro create_vibrations_profile'] = {}
// printer['gcode_macro _STATUS_VARIABLES'].printer_status = READY
// printer['gcode_macro _STATUS_VARIABLES'].status_effect_macros = ['_STATUS_CONSOLE', '_STATUS_KLIPPER_SCREEN']
// printer['gcode_macro SET_STATUS'] = {}
// printer['gcode_macro RESET_STATUS'] = {}
// printer['gcode_macro _EFFECT_STATUS'] = {}
// printer['gcode_macro _STATUS_CONSOLE'] = {}
// printer['gcode_macro _STATUS_KLIPPER_SCREEN'] = {}
// printer['gcode_macro M24'] = {}
// printer['gcode_macro M25'] = {}
// printer['gcode_macro Z_TILT_ADJUST'] = {}
// printer['gcode_macro TURN_OFF_HEATERS'] = {}
// printer['gcode_macro SET_HEATER_TEMPERATURE'] = {}
// printer['gcode_macro M109'] = {}
// printer['gcode_macro M190'] = {}
// printer['gcode_macro G28'] = {}
// printer['gcode_macro BED_MESH_CALIBRATE'] = {}
// printer['gcode_macro TEST_RESONANCES'] = {}
// printer['gcode_macro CARTOGRAPHER_TOUCH'] = {}
// printer['gcode_macro Calibrate_Hotend'] = {}
// printer['gcode_macro Calibrate_BedHeater'] = {}
// printer['gcode_macro TEST_SPEED'] = {}
// printer['gcode_macro DUMP_VARIABLES'] = {}
// printer['gcode_macro START_PRINT'] = {}
// printer['gcode_macro PRINT_START'].adaptive_mesh = 'false'
// printer['gcode_macro END_PRINT'] = {}
// printer['gcode_macro PRINT_END'] = {}
// printer['gcode_macro HOME_IF_NEEDED'] = {}
// printer['gcode_macro PAUSE'].extrude = 1.0
// printer['gcode_macro RESUME'].last_extruder_temp = {'restore': False, 'temp': 0}
// printer['gcode_macro RESUME'].restore_idle_timeout = 0
// printer['gcode_macro RESUME'].idle_state = False
// printer['gcode_macro CANCEL_PRINT'].park = True
// printer['gcode_macro LOAD_FILAMENT'].load_distance = 50
// printer['gcode_macro LOAD_FILAMENT'].purge_distance = 25
// printer['gcode_macro UNLOAD_FILAMENT'].unload_distance = 50
// printer['gcode_macro UNLOAD_FILAMENT'].purge_distance = 25
// printer['gcode_macro Drop_Bed'] = {}
// printer['gcode_macro DRAW_PRIMING_LINES'] = {}
// printer['gcode_macro HEAT_SOAK'].target_chamber_temp = 0
// printer['gcode_macro HEAT_SOAK'].target_bed_temp = 0
// printer['gcode_macro HEAT_SOAK'].stage = None
// printer['gcode_macro HEAT_SOAK'].check_interval = 10
// printer['gcode_macro HEAT_SOAK'].soak_time_remaining = 0
// printer['gcode_macro HEAT_SOAK'].total_time_elapsed = 0
// printer['gcode_macro CANCEL_HEAT_SOAK'] = {}
// printer['gcode_macro _SOAK_COMPLETE'] = {}
// printer['gcode_macro Razzle_Dazzle'] = {}
// printer['stepper_enable'].steppers = {'stepper_x': True, 'stepper_x1': True, 'stepper_y': True, 'stepper_y1': True, 'stepper_z': True, 'stepper_z1': True, 'stepper_z2': True, 'extruder': False}
// printer['tmc5160 stepper_x'].mcu_phase_offset = 75
// printer['tmc5160 stepper_x'].phase_offset_position = 350.54375
// printer['tmc5160 stepper_x'].run_current = 1.196925541070979
// printer['tmc5160 stepper_x'].hold_current = 1.196925541070979
// printer['tmc5160 stepper_x'].drv_status = {'sg_result': 58, 'cs_actual': 31, 'stallguard': 1, 'stst': 1}
// printer['tmc5160 stepper_x'].temperature = None
// printer['tmc5160 stepper_x1'].mcu_phase_offset = 117
// printer['tmc5160 stepper_x1'].phase_offset_position = 350.80625
// printer['tmc5160 stepper_x1'].run_current = 1.196925541070979
// printer['tmc5160 stepper_x1'].hold_current = 1.196925541070979
// printer['tmc5160 stepper_x1'].drv_status = {'sg_result': 50, 'cs_actual': 31, 'stallguard': 1, 'stst': 1}
// printer['tmc5160 stepper_x1'].temperature = None
// printer['tmc5160 stepper_y'].mcu_phase_offset = 55
// printer['tmc5160 stepper_y'].phase_offset_position = 0.40625
// printer['tmc5160 stepper_y'].run_current = 1.196925541070979
// printer['tmc5160 stepper_y'].hold_current = 1.196925541070979
// printer['tmc5160 stepper_y'].drv_status = {'sg_result': 51, 'cs_actual': 31, 'stallguard': 1, 'stst': 1}
// printer['tmc5160 stepper_y'].temperature = None
// printer['tmc5160 stepper_y1'].mcu_phase_offset = 97
// printer['tmc5160 stepper_y1'].phase_offset_position = 0.6687500000000001
// printer['tmc5160 stepper_y1'].run_current = 1.196925541070979
// printer['tmc5160 stepper_y1'].hold_current = 1.196925541070979
// printer['tmc5160 stepper_y1'].drv_status = {'sg_result': 48, 'cs_actual': 31, 'stallguard': 1, 'stst': 1}
// printer['tmc5160 stepper_y1'].temperature = None
// printer['tmc2209 stepper_z'].mcu_phase_offset = 9
// printer['tmc2209 stepper_z'].phase_offset_position = 9.859598245509119
// printer['tmc2209 stepper_z'].run_current = 0.7954951288348658
// printer['tmc2209 stepper_z'].hold_current = 0.7954951288348658
// printer['tmc2209 stepper_z'].drv_status = {'cs_actual': 25, 'stst': 1}
// printer['tmc2209 stepper_z'].temperature = None
// printer['tmc2209 stepper_z1'].mcu_phase_offset = 5
// printer['tmc2209 stepper_z1'].phase_offset_position = 9.854598245509118
// printer['tmc2209 stepper_z1'].run_current = 0.7954951288348658
// printer['tmc2209 stepper_z1'].hold_current = 0.7954951288348658
// printer['tmc2209 stepper_z1'].drv_status = {'cs_actual': 25, 'stst': 1}
// printer['tmc2209 stepper_z1'].temperature = None
// printer['tmc2209 stepper_z2'].mcu_phase_offset = 55
// printer['tmc2209 stepper_z2'].phase_offset_position = 9.917098245509118
// printer['tmc2209 stepper_z2'].run_current = 0.7954951288348658
// printer['tmc2209 stepper_z2'].hold_current = 0.7954951288348658
// printer['tmc2209 stepper_z2'].drv_status = {'cs_actual': 25, 'stst': 1}
// printer['tmc2209 stepper_z2'].temperature = None
// printer['heaters'].available_heaters = ['heater_bed', 'extruder']
// printer['heaters'].available_sensors = ['heater_bed', 'temperature_sensor MCU_THB', 'temperature_sensor cartographer_coil', 'temperature_sensor MCU_Carto', 'temperature_sensor MCU_Manta', 'temperature_sensor CM4', 'temperature_sensor Chamber_Top', 'temperature_sensor Chamber_Bottom', 'temperature_fan Electronics_Bay', 'extruder']
// printer['heaters'].available_monitors = []
// printer['heater_bed'].temperature = 24.15
// printer['heater_bed'].target = 0.0
// printer['heater_bed'].power = 0.0
// printer['idle_timeout'].state = Ready
// printer['idle_timeout'].printing_time = 0.0
// printer['bed_mesh'].profile_name =
// printer['bed_mesh'].mesh_min = (0.0, 0.0)
// printer['bed_mesh'].mesh_max = (0.0, 0.0)
// printer['bed_mesh'].probed_matrix = [[]]
// printer['bed_mesh'].mesh_matrix = [[]]
// printer['bed_mesh'].profiles = {'default': {'points': ((0.193619, 0.173019, 0.166346, 0.168486, 0.165894, 0.157469, 0.146174, 0.141552, 0.136189, 0.128524, 0.126803, 0.125379, 0.121295, 0.120886, 0.121336, 0.120347, 0.121925, 0.122573, 0.119572, 0.128776, 0.129234, 0.115154, 0.110883, 0.1111, 0.113932, 0.116815, 0.11678, 0.116168, 0.123541, 0.127911), (0.159436, 0.146569, 0.140021, 0.141942, 0.139623, 0.131614, 0.121603, 0.119213, 0.11419, 0.109947, 0.109586, 0.106997, 0.104292, 0.104028, 0.103007, 0.104731, 0.106314, 0.107734, 0.104275, 0.106512, 0.105535, 0.09847, 0.09638, 0.096324, 0.101842, 0.105081, 0.105155, 0.104357, 0.109802, 0.115422), (0.134608, 0.120454, 0.114979, 0.116927, 0.115784, 0.108256, 0.100487, 0.096555, 0.09535, 0.090712, 0.090835, 0.088864, 0.086649, 0.087884, 0.088041, 0.088911, 0.090619, 0.093021, 0.088971, 0.090231, 0.089121, 0.085761, 0.083925, 0.084214, 0.089446, 0.093468, 0.093995, 0.092159, 0.098367, 0.102524), (0.117183, 0.103906, 0.099063, 0.100469, 0.099164, 0.093748, 0.086677, 0.085094, 0.084064, 0.081242, 0.081831, 0.081554, 0.079183, 0.079896, 0.081225, 0.084078, 0.086941, 0.088028, 0.083851, 0.083521, 0.084204, 0.082597, 0.081175, 0.080186, 0.084285, 0.086114, 0.084869, 0.083888, 0.088924, 0.095656), (0.100662, 0.086582, 0.081401, 0.083382, 0.082766, 0.078576, 0.073816, 0.071849, 0.0702, 0.067299, 0.068244, 0.069732, 0.068516, 0.069828, 0.071633, 0.073405, 0.07541, 0.077915, 0.075325, 0.075214, 0.076764, 0.076403, 0.074503, 0.072636, 0.075724, 0.07721, 0.077758, 0.078901, 0.083904, 0.091841), (0.086732, 0.074903, 0.069415, 0.072291, 0.072218, 0.067918, 0.061938, 0.062601, 0.061787, 0.058126, 0.061191, 0.061602, 0.061461, 0.06317, 0.066509, 0.068596, 0.07042, 0.073199, 0.070987, 0.070731, 0.071692, 0.071919, 0.070782, 0.068971, 0.072236, 0.075017, 0.076351, 0.074661, 0.078783, 0.086779), (0.072067, 0.060009, 0.05504, 0.057888, 0.059931, 0.056593, 0.050918, 0.050629, 0.049907, 0.047737, 0.049928, 0.051383, 0.051227, 0.052933, 0.056979, 0.057872, 0.060105, 0.063173, 0.061826, 0.063271, 0.063594, 0.063709, 0.061763, 0.060751, 0.064439, 0.067345, 0.068171, 0.069358, 0.073928, 0.081062), (0.062313, 0.052208, 0.049108, 0.051497, 0.052125, 0.050238, 0.04559, 0.044769, 0.044757, 0.041152, 0.043874, 0.045737, 0.045635, 0.046121, 0.04994, 0.052781, 0.054906, 0.057233, 0.056664, 0.056512, 0.056384, 0.056488, 0.055559, 0.054989, 0.059144, 0.061816, 0.061997, 0.063213, 0.068242, 0.076492), (0.057084, 0.045133, 0.040571, 0.04378, 0.04403, 0.042282, 0.03833, 0.037043, 0.034102, 0.030646, 0.033383, 0.036041, 0.035421, 0.038307, 0.041077, 0.045356, 0.04739, 0.050039, 0.049073, 0.047946, 0.048971, 0.048197, 0.047341, 0.047446, 0.050841, 0.054645, 0.05596, 0.056802, 0.061887, 0.070199), (0.057518, 0.044058, 0.039616, 0.041912, 0.041242, 0.038678, 0.035517, 0.032738, 0.029595, 0.026027, 0.027549, 0.029892, 0.030237, 0.03292, 0.037618, 0.041053, 0.043969, 0.045879, 0.04319, 0.043593, 0.043618, 0.042953, 0.044364, 0.044698, 0.048142, 0.050837, 0.050298, 0.051549, 0.057375, 0.066196), (0.053478, 0.040048, 0.034081, 0.036715, 0.037394, 0.035263, 0.030563, 0.028202, 0.024421, 0.020425, 0.020695, 0.023576, 0.025546, 0.027253, 0.030193, 0.035252, 0.038116, 0.040898, 0.037924, 0.037644, 0.039353, 0.037921, 0.039989, 0.039973, 0.043888, 0.045299, 0.045562, 0.047473, 0.053359, 0.062482), (0.051712, 0.038027, 0.032755, 0.036482, 0.035129, 0.032735, 0.028056, 0.024848, 0.021554, 0.017387, 0.017635, 0.020679, 0.021898, 0.025539, 0.029186, 0.033243, 0.035501, 0.036954, 0.034669, 0.03487, 0.03518, 0.036226, 0.038077, 0.040476, 0.044944, 0.046479, 0.04594, 0.048513, 0.053669, 0.063735), (0.046092, 0.031478, 0.027687, 0.030096, 0.031062, 0.026708, 0.023198, 0.019429, 0.016045, 0.011698, 0.012678, 0.016169, 0.019372, 0.022675, 0.026262, 0.028624, 0.031558, 0.032022, 0.032589, 0.033039, 0.033632, 0.035322, 0.037457, 0.039913, 0.044494, 0.04594, 0.04742, 0.049073, 0.055085, 0.063729), (0.040195, 0.02432, 0.018882, 0.021512, 0.020432, 0.018197, 0.013547, 0.009508, 0.007284, 0.004528, 0.006416, 0.010032, 0.014225, 0.016847, 0.020568, 0.023939, 0.026634, 0.028621, 0.026603, 0.02803, 0.030808, 0.033489, 0.035592, 0.037549, 0.043128, 0.045203, 0.047277, 0.048092, 0.054129, 0.062432), (0.033206, 0.016325, 0.009088, 0.011948, 0.010672, 0.00668, 0.001297, -0.001976, -0.00293, -0.00553, -0.002564, 0.001714, 0.004719, 0.008581, 0.012976, 0.016367, 0.017905, 0.020302, 0.019006, 0.02233, 0.024633, 0.027577, 0.029864, 0.032794, 0.039965, 0.042678, 0.043862, 0.046328, 0.050808, 0.058261), (0.029042, 0.010151, 0.004027, 0.006204, 0.004163, -0.000992, -0.00686, -0.009368, -0.010707, -0.01213, -0.008404, -0.005446, -0.002012, 0.001756, 0.005676, 0.010369, 0.013333, 0.015538, 0.014602, 0.017759, 0.02068, 0.024048, 0.026956, 0.031197, 0.037644, 0.040957, 0.041992, 0.044523, 0.047713, 0.055794), (0.016225, 0.004985, -0.000746, -0.001022, -0.002435, -0.008347, -0.012504, -0.016856, -0.018286, -0.018815, -0.015271, -0.011061, -0.009116, -0.005895, -0.002381, 0.000761, 0.005876, 0.010422, 0.009209, 0.012241, 0.015853, 0.018799, 0.023332, 0.027648, 0.033877, 0.035746, 0.039025, 0.041857, 0.046773, 0.051219), (0.013015, 0.00339, -0.003239, -0.002622, -0.005507, -0.010618, -0.015715, -0.019135, -0.021366, -0.020959, -0.018093, -0.013152, -0.011034, -0.009963, -0.007652, -0.004024, 0.003075, 0.008575, 0.007197, 0.011702, 0.015314, 0.017515, 0.02143, 0.025789, 0.031982, 0.035649, 0.038086, 0.043856, 0.047922, 0.048579), (0.008817, 0.002404, -0.007528, -0.007964, -0.009541, -0.013317, -0.019526, -0.022222, -0.025394, -0.024295, -0.019562, -0.015847, -0.014104, -0.014677, -0.012405, -0.007672, -7.4e-05, 0.004512, 0.003631, 0.007974, 0.010999, 0.013247, 0.01801, 0.023422, 0.029823, 0.032338, 0.03563, 0.041566, 0.047607, 0.050906), (0.005703, 0.000109, -0.009172, -0.012016, -0.01285, -0.017875, -0.021289, -0.024669, -0.026258, -0.02624, -0.020395, -0.017392, -0.016598, -0.01494, -0.011578, -0.008012, -0.00055, 0.005281, 0.004121, 0.007118, 0.008765, 0.01167, 0.015782, 0.021444, 0.028205, 0.03047, 0.036311, 0.041843, 0.049652, 0.054852), (0.001317, -0.000726, -0.013004, -0.016836, -0.017278, -0.021085, -0.024626, -0.026482, -0.028063, -0.027668, -0.023376, -0.020908, -0.019606, -0.018187, -0.014308, -0.009236, -0.001633, 0.004278, 0.002249, 0.004071, 0.005229, 0.008792, 0.012999, 0.018735, 0.024609, 0.027572, 0.032413, 0.040271, 0.051181, 0.056963), (-0.002612, -0.005947, -0.018802, -0.021837, -0.022129, -0.023806, -0.028183, -0.028334, -0.029274, -0.029106, -0.02626, -0.023459, -0.021778, -0.019159, -0.014009, -0.008548, -0.002426, 0.002582, 0.001308, 0.003082, 0.004764, 0.008354, 0.012863, 0.017685, 0.024599, 0.026867, 0.030765, 0.041146, 0.052697, 0.061464), (-0.003229, -0.007845, -0.022006, -0.024396, -0.023536, -0.025903, -0.028515, -0.028766, -0.028714, -0.030233, -0.027509, -0.024308, -0.021524, -0.017417, -0.011733, -0.006582, 0.001137, 0.005762, 0.004243, 0.006554, 0.007538, 0.011022, 0.016436, 0.021624, 0.029589, 0.031799, 0.034584, 0.044331, 0.057757, 0.068142), (-0.001934, -0.011943, -0.024916, -0.0247, -0.022834, -0.023326, -0.026401, -0.02485, -0.026053, -0.027977, -0.023952, -0.022056, -0.017501, -0.012719, -0.004963, 0.002843, 0.008556, 0.014824, 0.014118, 0.014952, 0.016565, 0.018975, 0.023444, 0.027922, 0.035623, 0.037222, 0.039129, 0.049826, 0.062839, 0.072016), (-0.000812, -0.015587, -0.024693, -0.023447, -0.020346, -0.019697, -0.021991, -0.020873, -0.02167, -0.024015, -0.019982, -0.017692, -0.01223, -0.005088, 0.002038, 0.009726, 0.017462, 0.021694, 0.019964, 0.021223, 0.021456, 0.023695, 0.02743, 0.031884, 0.037176, 0.039038, 0.041649, 0.051111, 0.062486, 0.073351), (-0.002082, -0.015041, -0.021038, -0.018135, -0.014811, -0.013542, -0.015322, -0.012543, -0.011655, -0.013919, -0.011708, -0.007746, -0.002884, 0.004431, 0.012205, 0.020427, 0.028368, 0.0323, 0.029324, 0.029378, 0.028179, 0.031056, 0.033054, 0.036632, 0.042581, 0.04325, 0.045372, 0.053733, 0.064421, 0.073504), (-0.001045, -0.01341, -0.015712, -0.010636, -0.006441, -0.007358, -0.00691, -0.003058, -0.001425, -0.004704, -0.001249, 0.003099, 0.007985, 0.014644, 0.020736, 0.029415, 0.036968, 0.039532, 0.036755, 0.036568, 0.036098, 0.037576, 0.039334, 0.041893, 0.047222, 0.046594, 0.048038, 0.055489, 0.066565, 0.075133), (0.007269, -0.003569, -0.007321, -0.000515, 0.002351, 0.003812, 0.004344, 0.008968, 0.010141, 0.007848, 0.012498, 0.015633, 0.021426, 0.028041, 0.0347, 0.042616, 0.049119, 0.051081, 0.04844, 0.04886, 0.047293, 0.048279, 0.049865, 0.050477, 0.053217, 0.053936, 0.054588, 0.063135, 0.073278, 0.080805), (0.019353, 0.00807, 0.00569, 0.010956, 0.013771, 0.016215, 0.01743, 0.02254, 0.022276, 0.020041, 0.023667, 0.029585, 0.035688, 0.040934, 0.047361, 0.054658, 0.06118, 0.063438, 0.059345, 0.05842, 0.056897, 0.060999, 0.068906, 0.067073, 0.067914, 0.062252, 0.062088, 0.070688, 0.081789, 0.090747), (0.035356, 0.022483, 0.018032, 0.023252, 0.028047, 0.029735, 0.031815, 0.03694, 0.036751, 0.03523, 0.038171, 0.043824, 0.049127, 0.05681, 0.064048, 0.068958, 0.074736, 0.076815, 0.071358, 0.070816, 0.070685, 0.085492, 0.085477, 0.084358, 0.08525, 0.077605, 0.074589, 0.082538, 0.09249, 0.10127)), 'mesh_params': OrderedDict([('min_x', 30.0), ('max_x', 320.0), ('min_y', 30.0), ('max_y', 320.0), ('x_count', 30), ('y_count', 30), ('mesh_x_pps', 2), ('mesh_y_pps', 2), ('algo', 'bicubic'), ('tension', 0.2)])}, '100C': {'points': ((0.21187, 0.190201, 0.185444, 0.186434, 0.184566, 0.175918, 0.166453, 0.16197, 0.156232, 0.149864, 0.148622, 0.147684, 0.144017, 0.143795, 0.144288, 0.144726, 0.145876, 0.145539, 0.143662, 0.153313, 0.15329, 0.136743, 0.132283, 0.131218, 0.134924, 0.137066, 0.13676, 0.135219, 0.140978, 0.144791), (0.174473, 0.161727, 0.157073, 0.159387, 0.156234, 0.14947, 0.140748, 0.138188, 0.135299, 0.130247, 0.129735, 0.128593, 0.125126, 0.125496, 0.126251, 0.12701, 0.128871, 0.130405, 0.126694, 0.130138, 0.127181, 0.11953, 0.115981, 0.116464, 0.121225, 0.123668, 0.123309, 0.121547, 0.126657, 0.131952), (0.147811, 0.132884, 0.128184, 0.13112, 0.129321, 0.122504, 0.116609, 0.113998, 0.113449, 0.109878, 0.111784, 0.110666, 0.109546, 0.109655, 0.110474, 0.11141, 0.113475, 0.115837, 0.111052, 0.1111, 0.111197, 0.106359, 0.103318, 0.10345, 0.108697, 0.111035, 0.111069, 0.109579, 0.112784, 0.118401), (0.126094, 0.111706, 0.106922, 0.109488, 0.108063, 0.104155, 0.097046, 0.096673, 0.097069, 0.09469, 0.095754, 0.096184, 0.096306, 0.096716, 0.097825, 0.100999, 0.103763, 0.105184, 0.100871, 0.100568, 0.10103, 0.098266, 0.096118, 0.094205, 0.098205, 0.099597, 0.098524, 0.096836, 0.100933, 0.107206), (0.106832, 0.093087, 0.087078, 0.089936, 0.090836, 0.087344, 0.081979, 0.081261, 0.08102, 0.079457, 0.082521, 0.083191, 0.083567, 0.085609, 0.088758, 0.091299, 0.093796, 0.094912, 0.092824, 0.092871, 0.093361, 0.09185, 0.089581, 0.085794, 0.088846, 0.09035, 0.090086, 0.089354, 0.093608, 0.101054), (0.090696, 0.077479, 0.072672, 0.077225, 0.078115, 0.074228, 0.069157, 0.069318, 0.069318, 0.068409, 0.071169, 0.072717, 0.072495, 0.074823, 0.077992, 0.082169, 0.085038, 0.086609, 0.084626, 0.084165, 0.084751, 0.084026, 0.081297, 0.07958, 0.082366, 0.085233, 0.084567, 0.083686, 0.087, 0.095588), (0.074965, 0.06263, 0.059195, 0.062703, 0.064681, 0.061586, 0.057356, 0.057274, 0.057125, 0.056266, 0.059147, 0.061853, 0.062303, 0.064652, 0.067883, 0.07128, 0.074744, 0.076267, 0.074857, 0.076051, 0.076958, 0.076501, 0.073491, 0.071148, 0.075305, 0.075603, 0.076675, 0.075803, 0.080168, 0.087551), (0.06297, 0.052979, 0.049225, 0.053828, 0.055919, 0.053166, 0.048538, 0.047999, 0.048098, 0.04675, 0.050025, 0.052551, 0.052609, 0.055011, 0.058728, 0.062247, 0.064831, 0.067376, 0.065681, 0.066067, 0.066143, 0.066207, 0.063892, 0.062159, 0.066002, 0.067879, 0.068555, 0.068434, 0.072734, 0.082391), (0.056647, 0.045003, 0.04132, 0.044978, 0.046461, 0.044772, 0.041289, 0.039866, 0.037358, 0.034928, 0.039078, 0.042031, 0.042757, 0.045231, 0.048521, 0.053163, 0.055512, 0.057564, 0.056917, 0.05635, 0.056058, 0.055888, 0.054556, 0.05349, 0.056961, 0.059941, 0.060214, 0.060333, 0.065163, 0.074552), (0.054681, 0.043045, 0.038942, 0.041482, 0.042577, 0.040356, 0.036911, 0.03511, 0.032623, 0.028822, 0.031996, 0.034006, 0.035753, 0.039156, 0.043801, 0.047429, 0.049616, 0.051763, 0.050262, 0.050318, 0.049658, 0.04883, 0.049075, 0.048989, 0.053272, 0.053881, 0.053847, 0.053606, 0.060151, 0.067999), (0.053085, 0.038579, 0.033512, 0.036979, 0.037485, 0.03681, 0.032542, 0.029995, 0.027445, 0.023592, 0.024187, 0.027806, 0.030068, 0.03252, 0.037013, 0.040775, 0.043581, 0.045887, 0.042924, 0.044525, 0.044453, 0.043641, 0.044238, 0.045174, 0.049549, 0.050151, 0.048944, 0.050517, 0.055539, 0.065338), (0.047753, 0.035577, 0.030842, 0.033834, 0.034539, 0.032539, 0.027748, 0.024999, 0.022677, 0.018189, 0.019086, 0.022778, 0.024955, 0.027846, 0.031649, 0.036045, 0.039464, 0.041043, 0.039326, 0.039692, 0.039459, 0.039577, 0.041388, 0.042979, 0.0477, 0.048553, 0.04838, 0.049146, 0.05463, 0.064969), (0.042616, 0.028386, 0.023868, 0.027749, 0.027799, 0.025786, 0.022363, 0.018604, 0.01503, 0.011366, 0.014651, 0.017633, 0.020981, 0.023997, 0.027527, 0.030515, 0.034505, 0.035998, 0.035249, 0.036207, 0.036905, 0.039116, 0.040588, 0.042127, 0.046188, 0.047377, 0.048309, 0.049681, 0.055161, 0.063772), (0.035432, 0.01949, 0.014946, 0.018457, 0.018818, 0.014827, 0.010695, 0.007768, 0.005835, 0.003832, 0.005804, 0.009596, 0.013764, 0.018039, 0.019999, 0.024486, 0.026942, 0.02969, 0.028237, 0.029682, 0.031934, 0.033892, 0.036429, 0.038628, 0.044333, 0.045407, 0.046774, 0.047829, 0.052885, 0.062453), (0.029867, 0.011551, 0.004822, 0.008472, 0.007308, 0.003794, -0.001244, -0.003365, -0.00484, -0.005432, -0.002896, 0.001216, 0.003963, 0.008534, 0.012389, 0.016675, 0.019851, 0.020772, 0.020354, 0.022985, 0.025093, 0.02792, 0.030696, 0.033726, 0.039974, 0.042614, 0.043833, 0.045747, 0.050016, 0.058121), (0.02194, 0.003787, -0.000526, 0.00313, -0.000346, -0.004895, -0.009482, -0.012226, -0.01216, -0.012566, -0.008886, -0.004933, -0.001391, 0.001497, 0.005549, 0.010151, 0.012599, 0.015153, 0.015139, 0.018683, 0.021105, 0.024605, 0.02789, 0.033252, 0.038202, 0.040054, 0.042052, 0.044153, 0.047908, 0.055593), (0.010224, -0.001342, -0.006299, -0.006373, -0.007515, -0.01274, -0.01675, -0.020476, -0.021454, -0.020462, -0.016978, -0.012521, -0.008474, -0.00643, -0.003336, 0.000915, 0.006014, 0.010193, 0.009362, 0.012265, 0.014882, 0.019035, 0.022471, 0.027153, 0.032595, 0.034505, 0.038138, 0.041012, 0.045542, 0.049676), (0.005674, -0.004486, -0.009876, -0.00923, -0.011938, -0.016002, -0.019988, -0.023642, -0.025525, -0.024377, -0.019483, -0.015681, -0.012089, -0.009455, -0.008773, -0.005139, 0.001626, 0.006908, 0.005073, 0.009229, 0.011854, 0.016209, 0.020092, 0.024787, 0.031322, 0.034368, 0.036299, 0.040119, 0.045294, 0.046427), (0.001289, -0.004906, -0.014285, -0.01357, -0.014679, -0.018428, -0.023231, -0.026315, -0.029008, -0.027937, -0.022064, -0.016537, -0.014696, -0.014834, -0.011773, -0.007452, -0.000649, 0.003858, 0.003388, 0.00719, 0.010708, 0.012122, 0.016632, 0.022357, 0.029479, 0.031791, 0.035127, 0.040061, 0.046735, 0.048475), (-0.001699, -0.00694, -0.0162, -0.017437, -0.01828, -0.022479, -0.026867, -0.028671, -0.030782, -0.029427, -0.023141, -0.019074, -0.017388, -0.016702, -0.014372, -0.007634, -0.001931, 0.004344, 0.003813, 0.006381, 0.007837, 0.01006, 0.014754, 0.019351, 0.027142, 0.029875, 0.033869, 0.04102, 0.047999, 0.052664), (-0.006937, -0.009379, -0.021414, -0.023076, -0.023797, -0.027113, -0.030497, -0.031076, -0.032747, -0.032061, -0.027271, -0.023061, -0.021565, -0.019706, -0.015578, -0.009868, -0.002929, 0.002234, 0.00176, 0.003026, 0.004074, 0.007025, 0.011174, 0.016192, 0.024144, 0.026524, 0.030179, 0.038217, 0.047833, 0.05434), (-0.011184, -0.013664, -0.026612, -0.027857, -0.02881, -0.030141, -0.033713, -0.034407, -0.034199, -0.034169, -0.030357, -0.027165, -0.023426, -0.020425, -0.016405, -0.011523, -0.004507, -0.000131, -0.000673, 0.002083, 0.002806, 0.006541, 0.010887, 0.016432, 0.023149, 0.025914, 0.028578, 0.038525, 0.049635, 0.058583), (-0.012212, -0.017868, -0.030468, -0.032451, -0.030594, -0.032491, -0.034926, -0.033352, -0.034016, -0.034103, -0.030616, -0.028563, -0.024786, -0.020326, -0.013715, -0.00732, -0.000902, 0.00397, 0.003552, 0.006386, 0.007244, 0.010433, 0.014048, 0.020838, 0.02752, 0.028563, 0.032098, 0.041328, 0.054874, 0.064707), (-0.011294, -0.020381, -0.032368, -0.031852, -0.028799, -0.029333, -0.032242, -0.030437, -0.031133, -0.032732, -0.028619, -0.02492, -0.020652, -0.014359, -0.008303, 0.000223, 0.008054, 0.012034, 0.011157, 0.013303, 0.01399, 0.017233, 0.021134, 0.025757, 0.03147, 0.033533, 0.03666, 0.046206, 0.057868, 0.066947), (-0.009275, -0.023907, -0.033065, -0.030615, -0.025595, -0.02584, -0.028107, -0.025713, -0.026764, -0.028854, -0.024169, -0.020911, -0.015228, -0.008388, 0.001048, 0.008567, 0.01651, 0.021644, 0.019797, 0.019907, 0.019938, 0.022538, 0.025914, 0.030825, 0.035601, 0.036003, 0.039549, 0.049499, 0.059484, 0.068921), (-0.010172, -0.02306, -0.029832, -0.024663, -0.02052, -0.019347, -0.02043, -0.01715, -0.01705, -0.018207, -0.015155, -0.010307, -0.004578, 0.00309, 0.012831, 0.019409, 0.026751, 0.030761, 0.029278, 0.028569, 0.028478, 0.029484, 0.031, 0.035628, 0.040225, 0.041167, 0.042359, 0.051652, 0.061098, 0.069085), (-0.008267, -0.01911, -0.021972, -0.016291, -0.011278, -0.010332, -0.010382, -0.005888, -0.00375, -0.0058, -0.002449, -0.00034, 0.00742, 0.014523, 0.020916, 0.030996, 0.038499, 0.041055, 0.038312, 0.038262, 0.036099, 0.037129, 0.038901, 0.042353, 0.04627, 0.044882, 0.046345, 0.05412, 0.064524, 0.072449), (0.001889, -0.008425, -0.01091, -0.004321, -5e-05, 0.002541, 0.00424, 0.008915, 0.010681, 0.008512, 0.011996, 0.01696, 0.023066, 0.030175, 0.037086, 0.044946, 0.051629, 0.055661, 0.051615, 0.051433, 0.050146, 0.050887, 0.051147, 0.052425, 0.055681, 0.055199, 0.055198, 0.062594, 0.07215, 0.079362), (0.015047, 0.005694, 0.00216, 0.008453, 0.012819, 0.016386, 0.01747, 0.023842, 0.024888, 0.022134, 0.0262, 0.033432, 0.038941, 0.044825, 0.051637, 0.058602, 0.066107, 0.068473, 0.064464, 0.062874, 0.061749, 0.064828, 0.072141, 0.070953, 0.069669, 0.063396, 0.064095, 0.071661, 0.081227, 0.089011), (0.032902, 0.019991, 0.015324, 0.020459, 0.026796, 0.029734, 0.030858, 0.03725, 0.038192, 0.036669, 0.040944, 0.047439, 0.054841, 0.060812, 0.067843, 0.073157, 0.07956, 0.080861, 0.076053, 0.074822, 0.075312, 0.088591, 0.088978, 0.087683, 0.08712, 0.079279, 0.075851, 0.08188, 0.091943, 0.100624)), 'mesh_params': OrderedDict([('min_x', 30.0), ('max_x', 320.0), ('min_y', 30.0), ('max_y', 320.0), ('x_count', 30), ('y_count', 30), ('mesh_x_pps', 2), ('mesh_y_pps', 2), ('algo', 'bicubic'), ('tension', 0.2)])}}
// printer['z_tilt'].applied = False
// printer['gcode_macro PROBECALIBRATE'] = {}
// printer['gcode_macro G32'] = {}
// printer['tmc2209 extruder'].mcu_phase_offset = 3
// printer['tmc2209 extruder'].phase_offset_position = 0.00492875
// printer['tmc2209 extruder'].run_current = 0.6119193298729737
// printer['tmc2209 extruder'].hold_current = 0.6119193298729737
// printer['tmc2209 extruder'].drv_status = None
// printer['tmc2209 extruder'].temperature = None
// printer['fan_generic Part_Fan'].speed = 0.0
// printer['fan_generic Part_Fan'].rpm = None
// printer['heater_fan Hotend_Fan'].speed = 0.0
// printer['heater_fan Hotend_Fan'].rpm = None
// printer['temperature_sensor MCU_THB'].temperature = 33.23
// printer['temperature_sensor MCU_THB'].measured_min_temp = 33.07
// printer['temperature_sensor MCU_THB'].measured_max_temp = 33.67
// printer['neopixel th_led'].color_data = [(0.8, 0.8, 0.8, 0.0), (0.8, 0.8, 0.8, 0.0), (0.8, 0.8, 0.8, 0.0)]
// printer['firmware_retraction'].retract_length = 0.2
// printer['firmware_retraction'].retract_speed = 30.0
// printer['firmware_retraction'].unretract_extra_length = 0.0
// printer['firmware_retraction'].unretract_speed = 25.0
// printer['mcu scanner'].mcu_version = CARTOGRAPHER 5.1.0
// printer['mcu scanner'].mcu_build_versions =
// printer['mcu scanner'].mcu_constants = {'ADC_MAX': 4095, 'BUS_PINS_i2c1': 'PB6,PB7', 'BUS_PINS_spi1': 'PA6,PA7,PA5', 'CANBUS_FREQUENCY': 1000000, 'CARTOGRAPHER_ADC_SMOOTH_COUNT': 16, 'CLOCK_FREQ': 48000000, 'MCU': 'stm32f042x6', 'PWM_MAX': 2, 'RECEIVE_WINDOW': 192, 'RESERVE_PINS_CAN': 'PA11,PA12', 'RESERVE_PINS_crystal': 'PF0,PF1', 'STATS_SUMSQ_BASE': 256, 'STEPPER_BOTH_EDGE': 1}
// printer['mcu scanner'].last_stats = {'mcu_awake': 0.028, 'mcu_task_avg': 1.1e-05, 'mcu_task_stddev': 2.5e-05, 'bytes_write': 3239, 'bytes_read': 25144, 'bytes_retransmit': 0, 'bytes_invalid': 0, 'send_seq': 371, 'receive_seq': 371, 'retransmit_seq': 0, 'srtt': 0.001, 'rttvar': 0.0, 'rto': 0.025, 'ready_bytes': 0, 'upcoming_bytes': 0, 'freq': 47998229, 'adj': 47998809}
// printer['probe'].name = scanner
// printer['probe'].last_z_result = 0.0
// printer['temperature_sensor cartographer_coil'].temperature = 26.33
// printer['temperature_sensor cartographer_coil'].measured_min_temp = 26.08
// printer['temperature_sensor cartographer_coil'].measured_max_temp = 26.78
// printer['scanner'].last_sample = None
// printer['scanner'].last_received_sample = {'clock': 6682534484, 'data': 33498339, 'temp': 26.32902946611148, '#name': 'cartographer_data', '#sent_time': 19872.420504340003, '#receive_time': 19872.530526005998, 'time': 139.2083766249842, 'data_smooth': 33498317.608453423, 'freq': 2994982.9824376185, 'pos': [175.0, 175.0, 10.0], 'vel': 0.0}
// printer['scanner'].model = default
// printer['temperature_sensor MCU_Carto'].temperature = 39.67
// printer['temperature_sensor MCU_Carto'].measured_min_temp = 38.65
// printer['temperature_sensor MCU_Carto'].measured_max_temp = 40.78
// printer['gcode_macro PROBE_CALIBRATE'] = {}
// printer['gcode_macro DATA_SAMPLE'] = {}
// printer['motors_sync'].applied = False
// printer['temperature_sensor MCU_Manta'].temperature = 44.24
// printer['temperature_sensor MCU_Manta'].measured_min_temp = 42.45
// printer['temperature_sensor MCU_Manta'].measured_max_temp = 44.39
// printer['temperature_host CM4'].temperature = 48.2
// printer['temperature_sensor CM4'].temperature = 48.2
// printer['temperature_sensor CM4'].measured_min_temp = 45.76
// printer['temperature_sensor CM4'].measured_max_temp = 49.17
// printer['temperature_sensor Chamber_Top'].temperature = 25.85
// printer['temperature_sensor Chamber_Top'].measured_min_temp = 25.37
// printer['temperature_sensor Chamber_Top'].measured_max_temp = 25.88
// printer['temperature_sensor Chamber_Bottom'].temperature = 22.39
// printer['temperature_sensor Chamber_Bottom'].measured_min_temp = 22.28
// printer['temperature_sensor Chamber_Bottom'].measured_max_temp = 22.59
// printer['temperature_fan Electronics_Bay'].speed = 0.0
// printer['temperature_fan Electronics_Bay'].rpm = None
// printer['temperature_fan Electronics_Bay'].temperature = 32.63
// printer['temperature_fan Electronics_Bay'].target = 35.0
// printer['controller_fan Driver_Fan'].speed = 1.0
// printer['controller_fan Driver_Fan'].rpm = None
// printer['fan_generic Bed_Fan'].speed = 0.0
// printer['fan_generic Bed_Fan'].rpm = None
// printer['fan_generic Fume_Fan'].speed = 0.0
// printer['fan_generic Fume_Fan'].rpm = None
// printer['gcode_macro M106'] = {}
// printer['neopixel chamber'].color_data = [(0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0), (0.8, 0.9, 0.4, 0.0)]
// printer['pause_resume'].is_paused = False
// printer['gcode_macro SET_PAUSE_NEXT_LAYER'] = {}
// printer['gcode_macro SET_PAUSE_AT_LAYER'] = {}
// printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer = {'enable': False, 'call': 'PAUSE'}
// printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer = {'enable': False, 'layer': 0, 'call': 'PAUSE'}
// printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'] = {}
// printer['gcode_macro _CLIENT_EXTRUDE'] = {}
// printer['gcode_macro _CLIENT_RETRACT'] = {}
// printer['gcode_macro _CLIENT_LINEAR_MOVE'] = {}
// printer['gcode_macro SET_ACTIVE_SPOOL'] = {}
// printer['gcode_macro CLEAR_ACTIVE_SPOOL'] = {}
// printer['gcode_macro GET_TIMELAPSE_SETUP'] = {}
// printer['gcode_macro _SET_TIMELAPSE_SETUP'] = {}
// printer['gcode_macro TIMELAPSE_TAKE_FRAME'].enable = True
// printer['gcode_macro TIMELAPSE_TAKE_FRAME'].takingframe = False
// printer['gcode_macro TIMELAPSE_TAKE_FRAME'].park = {'enable': False, 'pos': 'back_left', 'time': 0.1, 'custom': {'x': 10.0, 'y': 10.0, 'dz': 0.0}, 'coord': {'x': 0.0, 'y': 360.0, 'dz': 0}}
// printer['gcode_macro TIMELAPSE_TAKE_FRAME'].extruder = {'fw_retract': False, 'retract': 1.0, 'extrude': 1.0}
// printer['gcode_macro TIMELAPSE_TAKE_FRAME'].speed = {'travel': 100.0, 'retract': 15.0, 'extrude': 15.0}
// printer['gcode_macro TIMELAPSE_TAKE_FRAME'].verbose = False
// printer['gcode_macro TIMELAPSE_TAKE_FRAME'].check_time = 0.5
// printer['gcode_macro TIMELAPSE_TAKE_FRAME'].restore = {'absolute': {'coordinates': True, 'extrude': True}, 'speed': 1500, 'e': 0, 'factor': {'speed': 1.0, 'extrude': 1.0}}
// printer['gcode_macro TIMELAPSE_TAKE_FRAME'].macro = {'pause': 'PAUSE_BASE', 'resume': 'RESUME_BASE'}
// printer['gcode_macro TIMELAPSE_TAKE_FRAME'].is_paused = False
// printer['gcode_macro _TIMELAPSE_NEW_FRAME'] = {}
// printer['gcode_macro HYPERLAPSE'].cycle = 0
// printer['gcode_macro HYPERLAPSE'].run = False
// printer['gcode_macro TIMELAPSE_RENDER'].render = False
// printer['gcode_macro TIMELAPSE_RENDER'].run_identifier = 0
// printer['gcode_macro TEST_STREAM_DELAY'] = {}
// printer['motion_report'].live_position = Coord(x=175.0, y=175.0, z=10.0, e=0.0)
// printer['motion_report'].live_velocity = 0.0
// printer['motion_report'].live_extruder_velocity = 0.0
// printer['motion_report'].steppers = ['extruder', 'stepper_x', 'stepper_x1', 'stepper_y', 'stepper_y1', 'stepper_z', 'stepper_z1', 'stepper_z2']
// printer['motion_report'].trapq = ['extruder', 'toolhead']
// printer['query_endstops'].last_query = {}
// printer['system_stats'].sysload = 0.59375
// printer['system_stats'].cputime = 640.24231074
// printer['system_stats'].memavail = 3232264
// printer['manual_probe'].is_active = False
// printer['manual_probe'].z_position = None
// printer['manual_probe'].z_position_lower = None
// printer['manual_probe'].z_position_upper = None
// printer['toolhead'].homed_axes = xyz
// printer['toolhead'].axis_minimum = Coord(x=0.0, y=0.0, z=-5.0, e=0.0)
// printer['toolhead'].axis_maximum = Coord(x=350.0, y=360.0, z=245.0, e=0.0)
// printer['toolhead'].print_time = 123.22444863863274
// printer['toolhead'].stalls = 0
// printer['toolhead'].estimated_print_time = 139.3629716425
// printer['toolhead'].extruder = extruder
// printer['toolhead'].position = Coord(x=175.0, y=175.0, z=10.0, e=0.0)
// printer['toolhead'].max_velocity = 1000.0
// printer['toolhead'].max_accel = 5000.0
// printer['toolhead'].minimum_cruise_ratio = 0.5
// printer['toolhead'].square_corner_velocity = 5.0
// printer['extruder'].temperature = 27.43
// printer['extruder'].target = 0.0
// printer['extruder'].power = 0.0
// printer['extruder'].can_extrude = False
// printer['extruder'].pressure_advance = 0.04
// printer['extruder'].smooth_time = 0.04
// printer['extruder'].motion_queue = None

​
