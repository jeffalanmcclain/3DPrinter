#####################################################################
##                     Model and Acceleration
#####################################################################
[printer]								# Printer configuration
kinematics: corexy						# Printer type: corexy
max_velocity: 1000						# Maximum velocity (original 600)
max_accel: 12000						# Maximum acceleration (original 10000)
max_z_velocity: 50						# Maximum Z-axis velocity
max_z_accel: 100						# Maximum Z-axis acceleration
minimum_cruise_ratio: 0.5				# Default 0.5
square_corner_velocity: 12				# Square corner velocity (orginal 25, Klipper recommended 5) setting to 12 so Orca can use 9/12


#####################################################################
##                            X Axis
#####################################################################

# Motors are SIBOOR-42STH48-2504(S45) 2 phase 1.8' 0.9-ohm 2.5A 1.6mH
[stepper_x]
step_pin: PE6                         	# X-axis motor pulse pin setting
dir_pin: !PE5                         	# X-axis motor direction pin setting
enable_pin: !PC14                     	# X-axis motor enable pin setting
microsteps: 32                        	# Motor microsteps setting
rotation_distance: 40                 	# Active pulley circumference mm (2GT-20T pulley 40, 2GT-16T pulley 32)
full_steps_per_rotation: 200          	# Number of pulses required for a single motor revolution (1.8 degree motor: 200, 0.9 degree motor: 400)
endstop_pin: PF4						# Use Manta Endstop 0 dummy for now when no TH plugged in.  This will get REDEFINED in the relevant toolhead.cfg LATER (if included)
position_min: 0                       	# X-axis minimum travel - software limit
position_endstop: 350                	# Mechanical reset point coordinates for X-axis
position_max: 350                     	# X-axis maximum travel - software limit
homing_speed: 150                     	# Homing speed maximum 100
homing_retract_dist: 5                	# Setback distance after the first trigger of the homing switch
homing_positive_dir: true             	# Direction of homing (generally no change required)

[tmc5160 stepper_x]
cs_pin: PC13                          	# Chip select pin
spi_software_sclk_pin: PG8            	# SPI clock pin
spi_software_mosi_pin: PG6            	# SPI master out slave in pin
spi_software_miso_pin: PG7            	# SPI master in slave out pin
driver_TPFD: 0                        	# Driver setting
run_current: 1.2                      	# Running current  default Siboor was 1.5
spi_speed: 3500000                    	# SPI speed
interpolate: True                     	# Interpolation

# driver tune https://github.com/MakerBogans/docs/wiki/TMC-Driver-Tuning
# and driver autotune: https://github.com/andrewmcgr/klipper_tmc_autotune
#driver_TBL: 1
#driver_TOFF: 3
#driver_HSTRT: 7
#driver_HEND: 9

# [autotune_tmc stepper_x]
# motor: siboor-42sth48-2504(s45)
# voltage: 48
# [autotune_tmc stepper_x1]
# motor: siboor-42sth48-2504(s45)
# voltage: 48
# [autotune_tmc stepper_y]
# motor: siboor-42sth48-2504(s45)
# voltage: 48
# [autotune_tmc stepper_y1]
# motor: siboor-42sth48-2504(s45)
# voltage: 48
# [autotune_tmc stepper_z]
# motor: siboor-42sth48-2504(s45)
# voltage: 24
# [autotune_tmc stepper_z1]
# motor: siboor-42sth48-2504(s45)
# voltage: 24
# [autotune_tmc stepper_z2]
# motor: siboor-42sth48-2504(s45)
# voltage: 24

[stepper_x1]
step_pin: PD4                         	# X1-axis motor pulse pin setting
dir_pin: PD3                          	# X1-axis motor direction pin setting (motors are flipped so PD3)
enable_pin: !PD6                      	# X1-axis motor enable pin setting
microsteps: 32                        	# Motor microsteps setting
rotation_distance: 40                 	# Active pulley circumference mm (2GT-20T pulley 40, 2GT-16T pulley 32)
full_steps_per_rotation: 200          	# Number of pulses required for a single motor revolution (1.8 degree motor: 200, 0.9 degree motor: 400)

[tmc5160 stepper_x1]
cs_pin: PD5                           	# Chip select pin
spi_software_sclk_pin: PG8            	# SPI clock pin
spi_software_mosi_pin: PG6            	# SPI master out slave in pin
spi_software_miso_pin: PG7            	# SPI master in slave out pin
driver_TPFD: 0                        	# Driver setting
run_current: 1.2                      	# Running current  default Siboor was 1.5
spi_speed: 3500000                    	# SPI speed
interpolate: True                     	# Interpolation


#####################################################################
##                           Y Aixs
#####################################################################

[stepper_y]
step_pin: PC7                         	# Y-axis motor pulse pin setting
dir_pin: !PC8                         	# Y-axis motor direction pin setting
enable_pin: !PD2                      	# Y-axis motor enable pin setting
microsteps: 32                        	# Motor microsteps setting
rotation_distance: 40                 	# Active pulley circumference mm (2GT-20T pulley 40, 2GT-16T pulley 32)
full_steps_per_rotation: 200          	# Number of pulses required for a single motor revolution (1.8 degree motor: 200, 0.9 degree motor: 400)
endstop_pin: PF2                      	# Manta M3
position_min: 0                       	# Y-axis minimum travel - software limit
position_endstop: 360                 	# Mechanical reset point coordinates for Y-axis (change to 350 for 350 models)
position_max: 360                     	# Y-axis maximum travel - software limit (change to 350 for 350 models)
homing_speed: 150                     	# Homing speed maximum 100
homing_retract_dist: 5                	# Setback distance after the first trigger of the homing switch
homing_positive_dir: true             	# Direction of homing (generally no change required)

[tmc5160 stepper_y]
cs_pin: PC6                           	# Chip select pin
spi_software_sclk_pin: PG8            	# SPI clock pin
spi_software_mosi_pin: PG6            	# SPI master out slave in pin
spi_software_miso_pin: PG7            	# SPI master in slave out pin
driver_TPFD: 0                        	# Driver setting
run_current: 1.2                      	# Running current  default Siboor was 1.5
spi_speed: 3500000                    	# SPI speed
interpolate: True                     	# Interpolation

[stepper_y1]
step_pin: PE2                         	# Y1-axis motor pulse pin setting
dir_pin: PE1                          	# Y1-axis motor direction pin setting (motors are flipped so PE1)
enable_pin: !PE4                      	# Y1-axis motor enable pin setting
microsteps: 32                        	# Motor microsteps setting
rotation_distance: 40                 	# Active pulley circumference mm (2GT-20T pulley 40, 2GT-16T pulley 32)
full_steps_per_rotation: 200          	# Number of pulses required for a single motor revolution (1.8 degree motor: 200, 0.9 degree motor: 400)

[tmc5160 stepper_y1]
cs_pin: PE3                           	# Chip select pin
spi_software_sclk_pin: PG8            	# SPI clock pin
spi_software_mosi_pin: PG6            	# SPI master out slave in pin
spi_software_miso_pin: PG7            	# SPI master in slave out pin
driver_TPFD: 0                        	# Driver setting
run_current: 1.2                      	# Running current  default Siboor was 1.5
spi_speed: 3500000                    	# SPI speed
interpolate: True                     	# Interpolation


#####################################################################
#    -------z1------- 
#   |                 |
#   |                 |
#   |                 |
#   |                 |
#   |                 |
#   |                 |
#  z0---   display ---z2
#####################################################################
##                  Z0 Axis
#####################################################################
[stepper_z]
step_pin: PB8                         	# Z0-axis motor pulse pin setting
dir_pin: !PB7                         	# Z0-axis motor direction pin setting
enable_pin: !PE0                      	# Z0-axis motor enable pin setting
microsteps: 16                        	# Motor microsteps setting
rotation_distance: 4                  	# Active pulley circumference mm
endstop_pin: PF3						# Dummy Manta M2 to get working without carto or toolhead.  BE CAREFUL!!
#position_endstop: 200               	# Dummy to get working without toolhead
position_max: 245                     	# Z0-axis maximum travel - software limit
position_min: -5.0                    	# Z0-axis minimum travel - software limit
homing_speed: 50                      	# Homing speed
homing_retract_dist: 0                	# Setback distance after the first trigger of the homing switch
homing_positive_dir: False            	# Direction of homing (generally no change required)

#--------------------------------------------------------------------
[tmc2209 stepper_z]                   	# TMC2209 driver settings
uart_pin: PB9                         	# Driver communication port
interpolate: true                     	# Enable 256 microstep interpolation
run_current: 0.8                      	# Motor running current (mA)
hold_current: 0.8                     	# Holding current (mA)

#--------------------------------------------------------------------
[stepper_z1]
step_pin: PB4                         	# Z1-axis motor pulse pin setting
dir_pin: !PB3                         	# Z1-axis motor direction pin setting
enable_pin: !PB6                      	# Z1-axis motor enable pin setting
microsteps: 16                        	# Motor microsteps setting
rotation_distance: 4                  	# Active pulley circumference mm

#--------------------------------------------------------------------
[tmc2209 stepper_z1]                  	# TMC2209 driver settings
uart_pin: PB5                         	# Driver communication port
interpolate: true                     	# Enable 256 microstep interpolation
run_current: 0.8                      	# Motor running current (mA)
hold_current: 0.8                     	# Holding current (mA)

#--------------------------------------------------------------------
[stepper_z2]
step_pin: PG13                        	# Z2-axis motor pulse pin setting
dir_pin: !PG12                        	# Z2-axis motor direction pin setting
enable_pin: !PG15                     	# Z2-axis motor enable pin setting
microsteps: 16                        	# Motor microsteps setting
rotation_distance: 4                  	# Active pulley circumference mm

#--------------------------------------------------------------------
[tmc2209 stepper_z2]                  	# TMC2209 driver settings
uart_pin: PG14                        	# Driver communication port
interpolate: true                     	# Enable 256 microstep interpolation
run_current: 0.8                      	# Motor running current (mA)
hold_current: 0.8                     	# Holding current (mA)


[safe_z_home]
home_xy_position: 175, 175
# Example home_xy_position: 175,175 - This would be for a 350 * 350mm bed. 
z_hop: 5


##########################################################
#####################  Macros  ###########################
##########################################################


#dummy G28 here because it took me FOREVER to understand that "rename_existing" only applies to BUILT IN functions, not redefined macros...
#in Klipper, redefining a macro twice, just over-writes the previous instance...
#and my Status I want to change status to HOMING, so I tried to REDEFINE it and rename existing...
[gcode_macro G28]
description: G28 over-ride
rename_existing: G28.1
gcode:
	HOME params={rawparams}


[gcode_macro HOME]
description: Home redefined safe for AWD Trident
gcode:
	{% set p = params|upper %}
	{% set force = 'FORCE' in p %}
	{% set h = printer.toolhead.homed_axes|upper %}
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	{% set y_danger = 50 %}
	
#	M118 { "HOME REQUEST: %s" | format(p) }
#	M118 { "HOMED: %s" | format(h) }

    M204 S5000
	{% set home_all = 'X' not in p and 'Y' not in p and 'Z' not in p %}

	{% if home_all or 'Y' in p %}				# home Y first to avoid hitting front AWD motors in X home
		{% if not 'Y' in h or force %}			# Y not homed or requested force
			G28.1 y
			{% set h = "Y%s"|format(h) %}		# homed isn't updated in printer at this point, so dummy track ourselves
		{% endif %}
	{% endif %}

#	M118 { "HOMED: %s" | format(h) }
	{% if home_all or 'X' in p %}
		{% if not 'X' in h or force %}			# X not homed or requested force
			{% if not 'Y' in h %}				# MUST home Y if not homed before X or Z
				G28.1 y
				{% set h = "Y%s"|format(h) %}	# homed isn't updated in printer at this point, so dummy track ourselves
			{% endif %}
			G0 Y{y_center} F24000				# go safe Y before homing X...fundamentally means we don't allow X to be homed without Y before.
			G28.1 x
			{% set h = "X%s"|format(h) %}		# homed isn't updated in printer at this point, so dummy track ourselves
		{% endif %}
	{% endif %}
#	M118 { "HOMED: %s" | format(h) }

	{% if home_all or 'Z' in p %}
		{% if not 'Z' in h or force %}			# Z not homed or requested force
			{% if not 'Y' in h %}				# MUST home Y if not homed before X or Z
				G28.1 y
				{% set h = "Y%s"|format(h) %}	# homed isn't updated in printer at this point, so dummy track ourselves
			{% endif %}
			{% if not 'X' in h %}
				G28.1 x
				{% set h = "X%s"|format(h) %}	# homed isn't updated in printer at this point, so dummy track ourselves
			{% endif %}
			G90
			G0 X{x_center} Y{y_center} F24000	# 400*60 = 24000
			G28.1 z
			{% set h = "Z%s"|format(h) %}		# homed isn't updated in printer at this point, so dummy track ourselves
			G0 Z30 F24000
		{% endif %}
	{% else %}									# else leave in same center spot
		G0 X{x_center} Y{y_center} F24000		# 400*60 = 24000
	{% endif %}
#	M118 { "HOMED: %s" | format(h) }
  

[gcode_macro DROP_BED]
description: Move bed down to lowest Level
gcode:
	{% set z = printer.toolhead.axis_maximum.z|float %}
	G28
	G0 Z{z}


[gcode_macro HOME_FORCED]
description: Force HOME position even if not needed
gcode:
	G28 force


# [gcode_macro G32]
# description: Home ALL plus Z-tilt
# gcode:
    # Z_TILT_ADJUST				# Perform gantry leveling
    # G28	z


# [gcode_macro MOTOR_BUZZ]
# description: Buzz Motors
# gcode:
	# {% set motor = params.MOTOR|default(X) %}
	
	# stepper_buzz stepper=stepper_{motor}


[gcode_macro UNLOCK_MOVE]
description: Force Kinematic position to allow movement manually of motors.  BE CAREFUL!!!
gcode:
	{% set xpos = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set ypos = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	{% set zpos = (printer.toolhead.axis_minimum.z|float + printer.toolhead.axis_maximum.z|float ) / 2 %}
	M118 { "Setting X: %s  Y: %s  Z: %s   BE CAREFUL!!"|format(xpos,ypos,zpos) }
	SET_KINEMATIC_POSITION X={xpos} Y={ypos} Z={zpos}


[gcode_macro RAZZLE_DAZZLE]
description: Move head around the space fast! Fxxx is mm/min
gcode:
	{% set speed_percent = params.SPEED | default(1.0) | float %}
	{% set speed_percent = [speed_percent,1.0]| max %}
	
	{% set speed = printer['toolhead'].max_velocity * 60.0 * speed_percent %}			# max velocity converted to mm/min times a scaling
	
	G28 force
	GET_POSITION				# compare stepper positions before / after for skips.

	G90

	{% set random_x = (range(30, 320) | random) %}
	{% set random_y = (range(40, 350) | random) %}
	{% set random_z = (range(40, 100) | random) %}
	G0 X{random_x} Y{random_y} F{speed}
	G0 X175 Y175 Z75 F{speed}
	G0 X30 Y0 Z50 F{speed}
	G0 X350 Y355 Z10 F{speed}
	G0 X350 Y45 Z50 F{speed}
	G0 X30 Y0 Z100 F{speed}
	G0 X15 Y45 Z125 F{speed}
	G0 X105 Y175 Z50 F{speed}
	G0 X0 Y340 Z50 F{speed}
	G0 X175 Y175 Z100 F{speed}
	G0 X200 Y100 Z75 F{speed}
	G0 X30 Y40 Z100 F{speed}
	G0 X175 Y175 Z50 F{speed}
	G0 X180 Y175 Z50 F{speed}
	G0 X170 Y175 Z50 F{speed}
	{% set random_x = (range(30, 320) | random) %}
	{% set random_y = (range(40, 350) | random) %}
	{% set random_z = (range(40, 100) | random) %}
	G0 X{random_x} Y{random_y} F{speed}
	{% set random_x = (range(30, 320) | random) %}
	{% set random_y = (range(40, 350) | random) %}
	{% set random_z = (range(40, 100) | random) %}
	G0 X{random_x} Y{random_y} F{speed}
	{% set random_x = (range(30, 320) | random) %}
	{% set random_y = (range(40, 350) | random) %}
	{% set random_z = (range(40, 100) | random) %}
	G0 X{random_x} Y{random_y} F{speed}
	{% set random_x = (range(30, 320) | random) %}
	{% set random_y = (range(40, 350) | random) %}
	{% set random_z = (range(40, 100) | random) %}
	G0 X{random_x} Y{random_y} F{speed}
	{% set random_x = (range(30, 320) | random) %}
	{% set random_y = (range(40, 350) | random) %}
	{% set random_z = (range(40, 100) | random) %}
	G0 X{random_x} Y{random_y} F{speed}
	
	{% set random_x = (range(30, 320) | random) %}
	{% set random_y = (range(40, 350) | random) %}
	G0 X{random_x} Y{random_y} F{speed}
	{% set random_x = (range(30, 320) | random) %}
	{% set random_y = (range(40, 350) | random) %}
	G0 X{random_x} Y{random_y} F{speed}
	{% set random_x = (range(30, 320) | random) %}
	{% set random_y = (range(40, 350) | random) %}
	G0 X{random_x} Y{random_y} F{speed}
	{% set random_x = (range(30, 320) | random) %}
	{% set random_y = (range(40, 350) | random) %}
	G0 X{random_x} Y{random_y} F{speed}
	{% set random_x = (range(30, 320) | random) %}
	{% set random_y = (range(40, 350) | random) %}
	G0 X{random_x} Y{random_y} F{speed}
	{% set random_x = (range(30, 320) | random) %}
	{% set random_y = (range(40, 350) | random) %}
	G0 X{random_x} Y{random_y} F{speed}
	{% set random_x = (range(30, 320) | random) %}
	{% set random_y = (range(40, 350) | random) %}
	G0 X{random_x} Y{random_y} F{speed}
	{% set random_x = (range(30, 320) | random) %}
	{% set random_y = (range(40, 350) | random) %}
	G0 X{random_x} Y{random_y} F{speed}
	{% set random_x = (range(30, 320) | random) %}
	{% set random_y = (range(40, 350) | random) %}
	G0 X{random_x} Y{random_y} F{speed}
	{% set random_x = (range(30, 320) | random) %}
	{% set random_y = (range(40, 350) | random) %}
	G0 X{random_x} Y{random_y} F{speed}
	{% set random_x = (range(30, 320) | random) %}
	{% set random_y = (range(40, 350) | random) %}
	G0 X{random_x} Y{random_y} F{speed}
	{% set random_x = (range(30, 320) | random) %}
	{% set random_y = (range(40, 350) | random) %}
	G0 X{random_x} Y{random_y} F{speed}
	{% set random_x = (range(30, 320) | random) %}
	{% set random_y = (range(40, 350) | random) %}
	G0 X{random_x} Y{random_y} F{speed}
	{% set random_x = (range(30, 320) | random) %}
	{% set random_y = (range(40, 350) | random) %}
	G0 X{random_x} Y{random_y} F{speed}
	{% set random_x = (range(30, 320) | random) %}
	{% set random_y = (range(40, 350) | random) %}
	G0 X{random_x} Y{random_y} F{speed}
	{% set random_x = (range(30, 320) | random) %}
	{% set random_y = (range(40, 350) | random) %}
	G0 X{random_x} Y{random_y} F{speed}
	{% set random_x = (range(30, 320) | random) %}
	{% set random_y = (range(40, 350) | random) %}
	G0 X{random_x} Y{random_y} F{speed}
	{% set random_x = (range(30, 320) | random) %}
	{% set random_y = (range(40, 350) | random) %}
	G0 X{random_x} Y{random_y} F{speed}

	G0 X175 Y175 Z50 F{speed}
	G0 Z45
	G0 Z50
	
	G28 force
	GET_POSITION
