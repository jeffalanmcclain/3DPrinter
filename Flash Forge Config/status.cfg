[gcode_macro _STATUS_VARIABLES]
variable_printer_status   : "READY"
variable_status_effect_macros    : ["_STATUS_CONSOLE", "_STATUS_KLIPPER_SCREEN", "_STATUS_LED", "_STATUS_KNOMI"]
gcode:


[gcode_macro SET_STATUS]
description: Set Printer Status
gcode:
	{% if params.S %}
		{% set status = params.S|default("READY") %}
	{% else %}
		{% set status = params.STATUS|default("READY") %}
	{% endif %}
#	{ action_respond_info("In SET_STATUS found: " ~ status) }
	SET_GCODE_VARIABLE MACRO=_STATUS_VARIABLES VARIABLE=printer_status	VALUE="'{status}'"
	_EFFECT_STATUS

[gcode_macro RESET_STATUS]
gcode:
	{% if params.D %}
		{% set delay = params.D|default(2) %}
	{% else %}
		{% set delay = params.DELAY|default(2) %}
	{% endif %}
#	{ action_respond_info("Reset status in: " ~ delay) }
	UPDATE_DELAYED_GCODE ID=_DELAYED_RESET_STATUS DURATION={delay}
	

[delayed_gcode _DELAYED_RESET_STATUS]
gcode:
	SET_STATUS
	

[gcode_macro _EFFECT_STATUS]
gcode:
	# put in a count of array size some how, increment through and recursively call UPDATE_DELAYED_GCODE until counter is through all is better than for eaching through all right here and dumping them all on stack?
	{% set status = printer['gcode_macro _STATUS_VARIABLES'].printer_status %}
	{% for macro in printer['gcode_macro _STATUS_VARIABLES'].status_effect_macros %}
#		{ action_respond_info("Effecting Macro: " ~ macro ~ " with: " ~ status) }
		{macro}
	{% endfor %}
	

[gcode_macro _STATUS_CONSOLE]
gcode:
	{% set status = printer['gcode_macro _STATUS_VARIABLES'].printer_status %}
	{ action_respond_info("Printer status is: " ~ status) }


[gcode_macro _STATUS_KLIPPER_SCREEN]
gcode:
    {% set status = printer['gcode_macro _STATUS_VARIABLES'].printer_status %}
    {% if not status.endswith('_END') %}
        M118 {status | title}
		UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=5
    {% endif %}

#############  MACRO OVERLOADS  ################

# Use Pause/Resume for M24/M25
[gcode_macro M24]
description: Resume/Pause Print
rename_existing: M24.1
gcode:
    {% if printer.pause_resume.is_paused %}
		SET_STATUS S=PRINTING
		RESUME
    {% else %}
		SET_STATUS S=PAUSED
        M24.1
    {% endif %}


[gcode_macro M25]
description: Pause Print
rename_existing: M25.1
gcode:
	SET_STATUS S=PAUSED
    PAUSE


#[gcode_macro QUAD_GANTRY_LEVEL]        # this is for Z-tilt, but under the QGL menu entry for knomi.
#description: Level gantry to fixed bed
#gcode:
#    Z_TILT_ADJUST


#[gcode_macro Z_TILT_ADJUST]
#description: Level Bed to fixed gantry
#rename_existing: Z_TILT_ADJUST_SI
#gcode:
#    SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=qgling VALUE=True
#    Z_TILT_ADJUST_SI
#    SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=qgling VALUE=False

[gcode_macro TURN_OFF_HEATERS]
rename_existing: TURN_OFF_HEATERS_SI
gcode:
	SET_STATUS S=HEATING_EXTRUDER_END
	SET_STATUS S=HEATING_BED_END
	RESET_STATUS
	TURN_OFF_HEATERS_SI {rawparams}
	
[gcode_macro SET_HEATER_TEMPERATURE]
rename_existing: SET_HEATER_TEMPERATURE_SI
gcode:
	{% if params.HEATER|upper == "HEATER_BED" %}
		SET_STATUS S=HEATING_BED
	{% elif params.HEATER|upper == "HEATER_EXTRUDER" %}
		SET_STATUS S=HEATING_EXTRUDER
	{% endif %}
	SET_HEATER_TEMPERATURE_SI {rawparams}
	
[gcode_macro M109]
rename_existing: M109.1
gcode:
    SET_STATUS S=HEATING_EXTRUDER
    M109.1 {rawparams}
    SET_STATUS S=HEATING_EXTRUDER_END
	RESET_STATUS

[gcode_macro M190]
rename_existing: M190.1
gcode:
    SET_STATUS S=HEATING_BED
    M190.1 {rawparams}
    SET_STATUS S=HEATING_BED_END
	RESET_STATUS
 
[gcode_macro G28]
rename_existing: G28.1
gcode:
    SET_STATUS S=HOMING
    G28.1 {rawparams}
    SET_STATUS S=HOMING_END
	RESET_STATUS
 
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_SI
gcode:
    SET_STATUS S=BEDMESH
	BED_MESH_CALIBRATE_SI {rawparams}
    SET_STATUS S=BEDMESH_END
	RESET_STATUS


[homing_override]       # redefine homing override even if it was already done another place to pick up the redefined G28's
gcode:
    # Limit acceleration for homing and moves on print start
    M204 S5000
    {%if rawparams %}
        G28.1 {rawparams}
    {% else %}
        G28.1 Z0
        G28.1 X0
        G28.1 Y0
        G90
        G1 X105 Y105 Z210 F1800
    {% endif %}
